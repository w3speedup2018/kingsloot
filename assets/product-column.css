/* ---------------------------------- *\
  #COLOUR SETTINGS
 Set up a colour palette which allows us to theme the entire project from one location
\* ---------------------------------- */
/* ----------------------------------
    #MEDIA QUERY SETTINGS

    Sets baseline Media Queries which correlate with some of the popular viewports.
    Adjust where necessary and add/remove if needed.
    Apply mixin from tools/mq

    Usage:
    @include mq($mq-mob, min) { ... };

---------------------------------- */
/* ----------------------------------*\
    #SPACING SETTINGS
\*---------------------------------- */
/* ----------------------------------
    #TYPOGRAPHY SETTINGS
---------------------------------- */
/* ----------------------------------
    #Z-INDEX SETTINGS

    Z-index mapping: Correctly place your variable in the correct position
    based on what it should appear above and behind.
    Utilises mixin from tools/zindex

    Usage:
    $z-index: (
        "header",
        "navigation",
        "footer",
    );

    @include z-index(header);

---------------------------------- */
/* ----------------------------------
    #FONT-SIZE

    PX to REM for font-sizes and line-height
    Line height is relative to the cascade - ideally inherited from the <body> but can be overridden.

    Usage:

    @include font-size($size-alpha);
    @include font-size($size-alpha, $line-height); overrides line-height

---------------------------------- */
/* ----------------------------------
    #Z-INDEX

    Mixin to streamline the mapping of your z-index
    Takes the index of your key and applies this as your z-index value
    Is applied in settings/zindex

---------------------------------- */
.c-product-column {
  padding: 24px 0;
}
@media screen and (min-width: 768px) {
  .c-product-column {
    padding: 48px 0;
  }
  .c-product-column__container {
    max-width: 1200px;
    margin: auto;
  }
}
.c-product-column__header {
  text-align: center;
  margin-bottom: 24px;
}
@media screen and (min-width: 768px) {
  .c-product-column__header {
    margin-bottom: 48px;
  }
}
.c-product-column__header-title {
  font-size: 25px;
  font-family: "Oswald", sans-serif;
  margin-bottom: 24px;
}
@media screen and (min-width: 768px) {
  .c-product-column__header-title {
    font-size: 32px;
  }
}
@media screen and (min-width: 768px) {
  .c-product-column__header-desc {
    max-width: 700px;
    margin: auto;
  }
}
.c-product-column__list {
  display: grid;
  grid-template-columns: repeat(2, 1fr);
  text-align: center;
  gap: 12px;
}
.c-product-column__list-item-image {
  margin-bottom: 12px;
}
.c-product-column__list-item-title {
  font-size: 16px;
  margin-bottom: 8px;
}
.c-product-column__list-item-price .c-price__compare {
  display: none;
}
@media screen and (min-width: 768px) {
  .c-product-column__list {
    grid-template-columns: repeat(4, 1fr);
  }
  .c-product-column__list-item-image {
    margin-bottom: 24px;
  }
}

/*# sourceMappingURL=data:application/json;charset=utf-8;base64,*/