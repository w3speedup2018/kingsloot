/* ---------------------------------- *\
  #COLOUR SETTINGS
 Set up a colour palette which allows us to theme the entire project from one location
\* ---------------------------------- */
/* ----------------------------------
    #MEDIA QUERY SETTINGS

    Sets baseline Media Queries which correlate with some of the popular viewports.
    Adjust where necessary and add/remove if needed.
    Apply mixin from tools/mq

    Usage:
    @include mq($mq-mob, min) { ... };

---------------------------------- */
/* ----------------------------------*\
    #SPACING SETTINGS
\*---------------------------------- */
/* ----------------------------------
    #TYPOGRAPHY SETTINGS
---------------------------------- */
/* ----------------------------------
    #Z-INDEX SETTINGS

    Z-index mapping: Correctly place your variable in the correct position
    based on what it should appear above and behind.
    Utilises mixin from tools/zindex

    Usage:
    $z-index: (
        "header",
        "navigation",
        "footer",
    );

    @include z-index(header);

---------------------------------- */
/* ----------------------------------
    #FONT-SIZE

    PX to REM for font-sizes and line-height
    Line height is relative to the cascade - ideally inherited from the <body> but can be overridden.

    Usage:

    @include font-size($size-alpha);
    @include font-size($size-alpha, $line-height); overrides line-height

---------------------------------- */
/* ----------------------------------
    #Z-INDEX

    Mixin to streamline the mapping of your z-index
    Takes the index of your key and applies this as your z-index value
    Is applied in settings/zindex

---------------------------------- */
.c-collection__inner {
  max-width: 1300px;
  margin: auto;
  margin-top: 40px;
  display: flex;
  flex-wrap: wrap;
  align-items: flex-start;
}
@media screen and (min-width: 640px) {
  .c-collection__inner {
    margin-top: 60px;
    gap: 40px;
  }
}
.c-collection__grid {
  display: grid;
  grid-template-columns: repeat(2, 1fr);
  -moz-column-gap: 10px;
       column-gap: 10px;
}
@media screen and (min-width: 640px) {
  .c-collection__grid {
    grid-template-columns: repeat(3, 1fr);
    -moz-column-gap: 30px;
         column-gap: 30px;
  }
}
.c-collection__grid .c-product-card {
  width: 100%;
  margin-bottom: 40px;
}
.c-collection__filters {
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: space-between;
  width: 100%;
  display: block;
}
@media screen and (min-width: 640px) {
  .c-collection__filters {
    display: none;
  }
}
.c-collection__filters-modal {
  width: 100%;
  padding: 20px;
  color: #000;
  font-family: var(--font-heading-family);
  padding: 8px;
  transition-property: opacity, display, transform;
  transition-duration: 0.4s;
  transition-timing-function: ease-in-out;
  overscroll-behavior-y: contain;
  overflow-y: auto;
  z-index: 1;
  display: none;
}
@media screen and (min-width: 640px) {
  .c-collection__filters-modal {
    width: 200px;
    display: block;
  }
}
.c-collection__filters-modal--top {
  position: relative;
  display: flex;
  align-items: center;
  justify-content: center;
  margin-bottom: 4.8rem;
}
.c-collection__filters-modal--top input {
  font-family: "Oswald", sans-serif;
  font-size: 14px;
  letter-spacing: 0.15em;
  width: 100%;
  border-bottom: 2px solid #474747;
  text-align: center;
  padding: 8px 65px;
  outline: none;
}
.c-collection__filters-modal--top input::-moz-placeholder {
  text-transform: uppercase;
  color: #000;
}
.c-collection__filters-modal--top input::placeholder {
  text-transform: uppercase;
  color: #000;
}
.c-collection__filters-modal--top a {
  position: absolute;
  right: 45px;
  top: 7px;
}
.c-collection__filters-modal--top svg {
  width: 20px;
  height: 20px;
}
.c-collection__filters-modal--header {
  display: flex;
  flex-direction: row;
  align-items: center;
  justify-content: space-between;
  margin-bottom: 4.8rem;
}
.c-collection__filters-modal--resetBtn {
  font-family: "Montserrat", sans-serif;
  font-size: 1.4rem;
  font-weight: 400;
  line-height: 16.8px;
  letter-spacing: 0.15em;
  color: #000;
  text-transform: uppercase;
  text-decoration: underline;
  cursor: pointer;
}
.c-collection__filters-modal--bg {
  display: none;
  position: fixed;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  background: rgba(0, 0, 0, 0.368627451);
  z-index: 8;
}
.c-collection__filters-modal--bg.is-active {
  display: block;
}
.c-collection__filters-modal--item {
  margin-bottom: 20px;
  padding-bottom: 20px;
}
.c-collection__filters-modal--title {
  display: flex;
  align-items: center;
  justify-content: space-between;
  width: 100%;
  font-family: "Montserrat", sans-serif;
  font-weight: 400;
  font-size: 1.6rem;
  line-height: 21.6px;
  letter-spacing: 0.15em;
  text-transform: uppercase;
  cursor: pointer;
}
.c-collection__filters-modal--title svg {
  width: 20px;
  height: 20px;
  transform: rotateZ(-180deg);
}
.c-collection__filters-modal--title.active svg {
  transform: rotateZ(0deg);
}
.c-collection__filters-modal--range, .c-collection__filters-modal--list {
  display: none;
  margin-top: 20px;
  padding-top: 20px;
}
.c-collection__filters-modal--range.active, .c-collection__filters-modal--list.active {
  display: flex;
}
.c-collection__filters-modal--list {
  flex-direction: column;
  align-items: left;
}
.c-collection__filters-modal--list .list {
  display: block;
  align-items: center;
  margin-top: 20px;
  width: 100%;
  margin-bottom: 20px;
}
.c-collection__filters-modal--list .item {
  padding: 8px 6px;
  background-color: transparent;
  border-radius: 100px;
  color: #000;
  font-family: "Montserrat", sans-serif;
  font-size: 1.3rem;
  font-weight: 400;
  line-height: 15.85px;
  letter-spacing: 0.03em;
  cursor: pointer;
  display: flex;
  justify-content: flex-start;
  align-items: center;
  gap: 3px;
}
.c-collection__filters-modal--list .item:hover {
  color: #5a5a5a;
}
.c-collection__filters-modal--list .item svg {
  display: none;
}
.c-collection__filters-modal--list .item.active svg {
  display: block;
}
.c-collection__filters-modal--list .remove-btn {
  font-family: "Montserrat", sans-serif;
  font-size: 1.4rem;
  font-weight: 400;
  line-height: 16.8px;
  letter-spacing: 0.15em;
  text-transform: uppercase;
  text-decoration: underline;
  cursor: pointer;
}
.c-collection__filters-modal--range {
  flex-direction: column;
  align-items: center;
  /* Import Google Font - Poppins */
  @import url("https://fonts.googleapis.com/css2?family=Poppins:wght@400;500;600;700&display=swap");
}
.c-collection__filters-modal--range__content {
  margin-bottom: 20px !important;
  padding-bottom: 20px !important;
}
.c-collection__filters-modal--range * {
  margin: 0;
  padding: 0;
  box-sizing: border-box;
  font-family: "Poppins", sans-serif;
}
.c-collection__filters-modal--range body {
  display: flex;
  align-items: center;
  justify-content: center;
  min-height: 100vh;
  background: #000;
}
.c-collection__filters-modal--range ::-moz-selection {
  color: #fff;
  background: #000;
}
.c-collection__filters-modal--range ::selection {
  color: #fff;
  background: #000;
}
.c-collection__filters-modal--range .wrapper {
  width: 400px;
  background: #fff;
  border-radius: 10px;
  padding: 20px 25px 40px;
  box-shadow: 0 12px 35px rgba(0, 0, 0, 0.1);
}
.c-collection__filters-modal--range header h2 {
  font-size: 24px;
  font-weight: 600;
}
.c-collection__filters-modal--range header p {
  margin-top: 5px;
  font-size: 16px;
}
.c-collection__filters-modal--range .price-input {
  width: 100%;
  display: flex;
  margin: 30px 0 35px;
}
.c-collection__filters-modal--range .price-input .field {
  position: relative;
  display: flex;
  width: 100%;
  height: 35px;
  align-items: center;
}
.c-collection__filters-modal--range .price-input .field span {
  position: absolute;
  left: 10px;
}
.c-collection__filters-modal--range .field input {
  width: 100%;
  height: 100%;
  padding: 0 20px;
  outline: none;
  font-family: "Montserrat", sans-serif;
  font-size: 16px;
  border-radius: 5px;
  text-align: center;
  border: 1px solid #999;
  -moz-appearance: textfield;
}
.c-collection__filters-modal--range input[type=number]::-webkit-outer-spin-button,
.c-collection__filters-modal--range input[type=number]::-webkit-inner-spin-button {
  -webkit-appearance: none;
}
.c-collection__filters-modal--range .price-input .separator {
  display: flex;
  align-items: center;
  justify-content: center;
  width: 30px;
  margin: 0 5px;
  font-family: "Montserrat", sans-serif;
  font-size: 16px;
  text-transform: uppercase;
}
.c-collection__filters-modal--range .slider {
  height: 5px;
  position: relative;
  background: #ddd;
  border-radius: 5px;
}
.c-collection__filters-modal--range .slider .progress {
  height: 100%;
  left: 0%;
  right: 0%;
  position: absolute;
  border-radius: 5px;
  background: #000;
}
.c-collection__filters-modal--range .range-input {
  position: relative;
}
.c-collection__filters-modal--range .range-input input {
  position: absolute;
  width: 100%;
  height: 5px;
  top: -5px;
  background: none;
  pointer-events: none;
  -webkit-appearance: none;
  -moz-appearance: none;
}
.c-collection__filters-modal--range input[type=range]::-webkit-slider-thumb {
  height: 17px;
  width: 17px;
  border-radius: 50%;
  background: #000;
  pointer-events: auto;
  -webkit-appearance: none;
  box-shadow: 0 0 6px rgba(0, 0, 0, 0.05);
}
.c-collection__filters-modal--range input[type=range]::-moz-range-thumb {
  height: 17px;
  width: 17px;
  border: none;
  border-radius: 50%;
  background: #000;
  pointer-events: auto;
  -moz-appearance: none;
  box-shadow: 0 0 6px rgba(0, 0, 0, 0.05);
}
.c-collection__filters-modal--range .remove-btn {
  font-family: "Montserrat", sans-serif;
  font-size: 1.4rem;
  font-weight: 400;
  line-height: 16.8px;
  letter-spacing: 0.15em;
  text-transform: uppercase;
  text-decoration: underline;
  cursor: pointer;
}
.c-collection__filters-modal-body {
  display: flex;
  flex-direction: column;
}
@media screen and (min-width: 820px) {
  .c-collection__filters {
    flex-direction: row;
  }
}
.c-collection__filter {
  position: relative;
  display: flex;
  align-items: center;
  justify-content: space-between;
  width: 100%;
  cursor: pointer;
  font-family: "Oswald", sans-serif;
  font-size: 1.8rem;
  font-weight: 600;
  letter-spacing: 0.15em;
  text-transform: uppercase;
  color: #000;
  background-color: #f3f3f3;
  padding: 8px;
}
.c-collection__filter svg {
  width: 24px;
  height: 24px;
  position: absolute;
  right: 0px;
  top: 4px;
}
.c-collection__filter-btnicon {
  width: 20px;
  height: 20px;
  border-radius: 50%;
  background-color: #fff;
  line-height: 20px;
  text-align: center;
}
.c-collection__filter-plus {
  display: block;
  padding-left: 3px;
}
.c-collection__filter-minus {
  display: none;
  line-height: 17px;
  padding-left: 3px;
}
.c-collection__filter.is-active .c-collection__filter-plus {
  display: none;
}
.c-collection__filter.is-active .c-collection__filter-minus {
  display: block;
}
@media screen and (min-width: 820px) {
  .c-collection__filter {
    width: -webkit-fit-content;
    width: -moz-fit-content;
    width: fit-content;
  }
  .c-collection__filter svg {
    right: -30px;
  }
}
.c-collection__sortby {
  position: relative;
}
.c-collection__sortby.is-desktop {
  display: none;
}
.c-collection__sortby.is-mobile {
  margin-bottom: 2rem;
  display: none;
}
.c-collection__sortby.is-mobile .c-collection__sortby-title {
  justify-content: space-between;
  font-size: 1.6rem;
  letter-spacing: 0.01em;
  font-family: "Montserrat", sans-serif;
}
.c-collection__sortby.is-mobile .c-collection__sortby-title span {
  font-weight: 400;
}
.c-collection__sortby.is-mobile .c-collection__sortby-title span svg {
  width: 20px;
  height: 20px;
}
@media screen and (min-width: 768px) {
  .c-collection__sortby.is-desktop {
    display: block;
  }
  .c-collection__sortby.is-mobile {
    display: none;
  }
}
.c-collection__sortby-title {
  display: flex;
  align-items: center;
  font-family: "Oswald", sans-serif;
  font-size: 1.8rem;
  font-weight: 400;
  line-height: 26.4px;
  letter-spacing: 0.15em;
  text-transform: uppercase;
  color: #000;
}
.c-collection__sortby-title span {
  display: flex;
  align-items: center;
  margin-left: 1rem;
  font-weight: 600;
  text-decoration: underline;
  cursor: pointer;
}
.c-collection__sortby-title span svg {
  width: 24px;
  height: 24px;
  margin-left: 0.4rem;
}
.c-collection__sortby-title span.active svg {
  transform: rotateZ(180deg);
}
.c-collection__sortby-title .js-sort-by-value {
  display: none;
}
@media screen and (min-width: 640px) {
  .c-collection__sortby-title .js-sort-by-value {
    display: block;
  }
}
.c-collection__sortby ul {
  display: block;
  width: 100%;
  background: #fff;
  z-index: 1;
  padding: 10px 15px;
}
@media screen and (min-width: 820px) {
  .c-collection__sortby ul {
    display: block;
    position: absolute;
    top: 35px;
    right: 0;
    width: 230px;
    background: #fff;
    z-index: 1;
    padding: 10px 15px;
    box-shadow: 0px 1px 5px #949494;
  }
}
.c-collection__sortby ul.hidden {
  display: none;
}
.c-collection__sortby ul li {
  font-family: "Oswald", sans-serif;
  font-size: 1.4rem;
  font-weight: 400;
  text-transform: uppercase;
  letter-spacing: 0.15em;
  cursor: pointer;
}
.c-collection__sortby ul li:hover {
  opacity: 0.8;
}

#collection-grid {
  width: 100%;
  margin-top: 4.8rem;
}
@media screen and (min-width: 768px) {
  #collection-grid {
    width: calc(100% - 270px);
    margin-top: 0px;
  }
}

.range-value {
  display: flex;
  justify-content: space-between;
  margin-top: 10px;
}

.c-ollection__filters-label {
  font-weight: 600;
  text-transform: uppercase;
}

/*# sourceMappingURL=data:application/json;charset=utf-8;base64,*/