/* ---------------------------------- *\
  #COLOUR SETTINGS
 Set up a colour palette which allows us to theme the entire project from one location
\* ---------------------------------- */
/* ----------------------------------
    #MEDIA QUERY SETTINGS

    Sets baseline Media Queries which correlate with some of the popular viewports.
    Adjust where necessary and add/remove if needed.
    Apply mixin from tools/mq

    Usage:
    @include mq($mq-mob, min) { ... };

---------------------------------- */
/* ----------------------------------*\
    #SPACING SETTINGS
\*---------------------------------- */
/* ----------------------------------
    #TYPOGRAPHY SETTINGS
---------------------------------- */
/* ----------------------------------
    #Z-INDEX SETTINGS

    Z-index mapping: Correctly place your variable in the correct position
    based on what it should appear above and behind.
    Utilises mixin from tools/zindex

    Usage:
    $z-index: (
        "header",
        "navigation",
        "footer",
    );

    @include z-index(header);

---------------------------------- */
/* ----------------------------------
    #FONT-SIZE

    PX to REM for font-sizes and line-height
    Line height is relative to the cascade - ideally inherited from the <body> but can be overridden.

    Usage:

    @include font-size($size-alpha);
    @include font-size($size-alpha, $line-height); overrides line-height

---------------------------------- */
/* ----------------------------------
    #Z-INDEX

    Mixin to streamline the mapping of your z-index
    Takes the index of your key and applies this as your z-index value
    Is applied in settings/zindex

---------------------------------- */
.c-icon-list {
  background-color: var(--bg-color);
}
.c-icon-list__container {
  display: grid;
  grid-template-columns: repeat(1, 1fr);
  padding: 24px;
  grid-gap: 12px;
}
@media screen and (min-width: 768px) {
  .c-icon-list__container {
    padding: 48px;
    grid-template-columns: repeat(3, 1fr);
    max-width: 1200px;
    margin: auto;
  }
}
.c-icon-list__item-image {
  width: 70px;
  height: 70px;
  margin-bottom: 24px;
}
.c-icon-list__item {
  display: flex;
  flex-direction: column;
  justify-content: center;
  align-items: center;
}
.c-icon-list__item h4 {
  color: #ffffff;
  font-size: 16px;
  letter-spacing: 0.5px;
  text-align: center;
}

/*# sourceMappingURL=data:application/json;charset=utf-8;base64,*/