/* ---------------------------------- *\
  #COLOUR SETTINGS
 Set up a colour palette which allows us to theme the entire project from one location
\* ---------------------------------- */
/* ----------------------------------
    #MEDIA QUERY SETTINGS

    Sets baseline Media Queries which correlate with some of the popular viewports.
    Adjust where necessary and add/remove if needed.
    Apply mixin from tools/mq

    Usage:
    @include mq($mq-mob, min) { ... };

---------------------------------- */
/* ----------------------------------*\
    #SPACING SETTINGS
\*---------------------------------- */
/* ----------------------------------
    #TYPOGRAPHY SETTINGS
---------------------------------- */
/* ----------------------------------
    #Z-INDEX SETTINGS

    Z-index mapping: Correctly place your variable in the correct position
    based on what it should appear above and behind.
    Utilises mixin from tools/zindex

    Usage:
    $z-index: (
        "header",
        "navigation",
        "footer",
    );

    @include z-index(header);

---------------------------------- */
/* ----------------------------------
    #FONT-SIZE

    PX to REM for font-sizes and line-height
    Line height is relative to the cascade - ideally inherited from the <body> but can be overridden.

    Usage:

    @include font-size($size-alpha);
    @include font-size($size-alpha, $line-height); overrides line-height

---------------------------------- */
/* ----------------------------------
    #Z-INDEX

    Mixin to streamline the mapping of your z-index
    Takes the index of your key and applies this as your z-index value
    Is applied in settings/zindex

---------------------------------- */
.c-best-seller__title {
  color: #000;
  text-transform: uppercase;
  margin-bottom: 2.4rem;
  text-align: center;
}
@media screen and (min-width: 820px) {
  .c-best-seller__title {
    margin-bottom: 0px;
    font-family: "Oswald", sans-serif;
    font-size: 2.2rem;
    font-weight: 400;
    line-height: 26.4px;
    letter-spacing: 0.15em;
  }
}
.c-best-seller__list {
  display: flex;
}
.c-best-seller__item {
  margin-bottom: 20px;
}
@media screen and (min-width: 820px) {
  .c-best-seller__item {
    margin: 0;
  }
}
.c-best-seller__item:last-child {
  margin-right: 0 !important;
}
.c-best-seller .c-product-card__info {
  text-align: center;
}
@media screen and (min-width: 820px) {
  .c-best-seller .c-product-card__info {
    text-align: left;
  }
}
@media screen and (min-width: 820px) {
  .c-best-seller .js-best-seller-swiper {
    padding-top: 80px;
  }
}
.c-best-seller .swiper-button-next {
  display: none;
  top: 40px;
  z-index: 400;
  border: solid 1px #000;
  border-radius: 30px;
  width: 40px;
  height: 40px;
  text-align: center;
}
@media screen and (min-width: 820px) {
  .c-best-seller .swiper-button-next {
    display: flex;
  }
}
.c-best-seller .swiper-button-next svg {
  width: 17px;
}
.c-best-seller .swiper-button-prev {
  top: 40px;
  left: auto;
  right: 60px;
  z-index: 400;
  border: solid 1px #000;
  border-radius: 30px;
  width: 40px;
  height: 40px;
  text-align: center;
  display: none;
}
@media screen and (min-width: 820px) {
  .c-best-seller .swiper-button-prev {
    display: flex;
  }
}
.c-best-seller .swiper-button-prev svg {
  width: 17px;
}
.c-best-seller .swiper-pagination {
  display: block;
  bottom: 0px;
}
@media screen and (min-width: 820px) {
  .c-best-seller .swiper-pagination {
    display: none;
  }
}
.c-best-seller .swiper-pagination .swiper-pagination-bullet {
  width: 10px;
  height: 10px;
  border: solid 1px #555;
  background: white;
}
.c-best-seller .swiper-pagination .swiper-pagination-bullet.swiper-pagination-bullet-active {
  background-color: #555;
}
.c-best-seller .c-product-card__title {
  margin-top: 0px;
}

/*# sourceMappingURL=data:application/json;charset=utf-8;base64,*/