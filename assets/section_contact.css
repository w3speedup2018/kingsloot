/* ---------------------------------- *\
  #COLOUR SETTINGS
 Set up a colour palette which allows us to theme the entire project from one location
\* ---------------------------------- */
/* ----------------------------------
    #MEDIA QUERY SETTINGS

    Sets baseline Media Queries which correlate with some of the popular viewports.
    Adjust where necessary and add/remove if needed.
    Apply mixin from tools/mq

    Usage:
    @include mq($mq-mob, min) { ... };

---------------------------------- */
/* ----------------------------------*\
    #SPACING SETTINGS
\*---------------------------------- */
/* ----------------------------------
    #TYPOGRAPHY SETTINGS
---------------------------------- */
/* ----------------------------------
    #Z-INDEX SETTINGS

    Z-index mapping: Correctly place your variable in the correct position
    based on what it should appear above and behind.
    Utilises mixin from tools/zindex

    Usage:
    $z-index: (
        "header",
        "navigation",
        "footer",
    );

    @include z-index(header);

---------------------------------- */
/* ----------------------------------
    #FONT-SIZE

    PX to REM for font-sizes and line-height
    Line height is relative to the cascade - ideally inherited from the <body> but can be overridden.

    Usage:

    @include font-size($size-alpha);
    @include font-size($size-alpha, $line-height); overrides line-height

---------------------------------- */
/* ----------------------------------
    #Z-INDEX

    Mixin to streamline the mapping of your z-index
    Takes the index of your key and applies this as your z-index value
    Is applied in settings/zindex

---------------------------------- */
.c-contact {
  display: flex;
  flex-flow: column nowrap;
  align-items: flex-start;
  justify-content: center;
  color: #000;
  font-family: var(--font-heading-family);
}
@media screen and (min-width: 960px) {
  .c-contact {
    flex-flow: row nowrap;
    padding: 4.8rem 0;
  }
}
.c-contact .mb-section .c-contact__track {
  display: block;
}
@media screen and (min-width: 960px) {
  .c-contact .mb-section .c-contact__track {
    display: none;
  }
}
.c-contact__menu {
  width: 100%;
  padding: 2.4rem 1.6rem;
  margin-top: 2.4rem;
}
@media screen and (min-width: 960px) {
  .c-contact__menu {
    margin-top: 0;
    width: 30%;
    padding: 0 5.6rem;
  }
}
.c-contact__menu-title {
  font-size: 2.2rem;
  font-family: "Oswald", sans-serif;
  text-transform: uppercase;
  letter-spacing: 0.15em;
  border-bottom: solid 2px #DADADA;
  padding: 0.8rem;
}
.c-contact__menu-item {
  display: flex;
  justify-content: space-between;
  align-items: center;
  border-bottom: solid 2px #DADADA;
  padding: 1.6rem;
  font-size: 2rem;
  font-family: "Oswald", sans-serif;
  text-transform: uppercase;
}
.c-contact__content {
  width: 100%;
}
@media screen and (min-width: 960px) {
  .c-contact__content {
    width: 70%;
  }
}
.c-contact__track {
  display: none;
  text-align: center;
}
@media screen and (min-width: 960px) {
  .c-contact__track {
    display: block;
  }
}
.c-contact__track-title {
  font-family: "Oswald", sans-serif;
  text-transform: uppercase;
  font-size: 2.4rem;
  line-height: 1.2;
  letter-spacing: 0.15em;
}
.c-contact__track-description {
  font-size: 1.2rem;
  line-height: 1.2;
  margin-top: 1.6rem;
}
.c-contact__track-subtitle {
  font-size: 1.2rem;
  line-height: 1.2;
  margin-top: 3.2rem;
}
.c-contact__track-btn {
  display: flex;
  align-items: center;
  border: solid 2px #000;
  padding: 0.8rem;
  max-width: 424px;
  margin-left: auto;
  margin-right: auto;
  margin-top: 0.8rem;
  color: #000;
}
.c-contact__track-btn a {
  width: 100%;
  text-align: center;
  letter-spacing: 0.165em;
  text-transform: uppercase;
  border: none;
  font-size: 1.4rem;
  font-weight: 700;
}
.c-contact__track-btn:hover {
  color: #fff;
  background: #000;
}
.c-contact__form {
  margin-top: 4.8rem;
  max-width: 540px;
  margin-left: auto;
  margin-right: auto;
  text-align: center;
}
.c-contact__form-title {
  font-family: "Oswald", sans-serif;
  text-transform: uppercase;
  font-size: 2.4rem;
  line-height: 1.2;
  letter-spacing: 0.15em;
}
.c-contact__form .form-field {
  display: block;
  text-align: center;
  margin-top: 4.8rem;
}
@media screen and (min-width: 960px) {
  .c-contact__form .form-field {
    display: flex;
    justify-content: space-between;
    align-items: center;
    margin-top: 1.6rem;
  }
}
.c-contact__form .form-field_label {
  display: block;
  letter-spacing: 0.05em;
  font-weight: 400;
  font-size: 1.2rem;
  width: 100%;
  text-align: center;
  margin-bottom: 1.6rem;
}
@media screen and (min-width: 960px) {
  .c-contact__form .form-field_label {
    width: 130px;
    text-align: left;
    margin-bottom: 0px;
  }
}
.c-contact__form .form-field_input {
  width: 100%;
  position: relative;
}
@media screen and (min-width: 960px) {
  .c-contact__form .form-field_input {
    width: calc(100% - 140px);
  }
}
.c-contact__form .form-field_input svg {
  position: absolute;
  right: 2.4rem;
  top: 1.6rem;
  width: 16px;
  height: 14px;
}
.c-contact__form .form-field_input .o-button {
  background: #000;
  color: #fff;
  width: 100%;
  padding: 0.8rem;
  letter-spacing: 0.165em;
  text-transform: uppercase;
  font-size: 1.4rem;
  line-height: 2.2;
}
.c-contact__form .form-field_input .o-button:hover {
  background: #fff;
  color: #000;
}
.c-contact__form .form-field__input {
  width: 100%;
  border: solid 2px #DADADA;
  padding: 0.8rem 2.4rem;
}
.c-contact__form .form-field.flex-start {
  align-items: flex-start;
}

/*# sourceMappingURL=data:application/json;charset=utf-8;base64,*/