/* ---------------------------------- *\
  #COLOUR SETTINGS
 Set up a colour palette which allows us to theme the entire project from one location
\* ---------------------------------- */
/* ----------------------------------
    #MEDIA QUERY SETTINGS

    Sets baseline Media Queries which correlate with some of the popular viewports.
    Adjust where necessary and add/remove if needed.
    Apply mixin from tools/mq

    Usage:
    @include mq($mq-mob, min) { ... };

---------------------------------- */
/* ----------------------------------*\
    #SPACING SETTINGS
\*---------------------------------- */
/* ----------------------------------
    #TYPOGRAPHY SETTINGS
---------------------------------- */
/* ----------------------------------
    #Z-INDEX SETTINGS

    Z-index mapping: Correctly place your variable in the correct position
    based on what it should appear above and behind.
    Utilises mixin from tools/zindex

    Usage:
    $z-index: (
        "header",
        "navigation",
        "footer",
    );

    @include z-index(header);

---------------------------------- */
/* ----------------------------------
    #FONT-SIZE

    PX to REM for font-sizes and line-height
    Line height is relative to the cascade - ideally inherited from the <body> but can be overridden.

    Usage:

    @include font-size($size-alpha);
    @include font-size($size-alpha, $line-height); overrides line-height

---------------------------------- */
/* ----------------------------------
    #Z-INDEX

    Mixin to streamline the mapping of your z-index
    Takes the index of your key and applies this as your z-index value
    Is applied in settings/zindex

---------------------------------- */
.c-product-list {
  background-color: var(--bg-color);
}
.c-product-list__item {
  display: flex;
  flex-direction: column;
}
.c-product-list__item-content {
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: center;
  text-align: center;
  padding: 24px;
}
.c-product-list__item-title {
  font-size: 25px;
  font-weight: 700;
  font-family: "Oswald", sans-serif;
  color: #000000;
  margin-bottom: 24px;
}
.c-product-list__item-price {
  font-size: 24px;
  margin-bottom: 24px;
}
.c-product-list__item-price .c-price__compare {
  display: none;
}
.c-product-list__item-button {
  margin-top: 24px;
  margin-bottom: 8px;
}
.c-product-list__item-collection {
  text-decoration: underline;
  font-size: 14px;
}
@media screen and (min-width: 768px) {
  .c-product-list__item {
    flex-direction: row;
  }
  .c-product-list__item-image {
    width: 50%;
  }
  .c-product-list__item-content {
    width: 50%;
  }
  .c-product-list__item:nth-child(odd) {
    flex-flow: row-reverse;
  }
  .c-product-list__item-title {
    font-size: 32px;
  }
  .c-product-list__item-desc {
    max-width: 400px;
  }
}

/*# sourceMappingURL=data:application/json;charset=utf-8;base64,*/