/* ---------------------------------- *\
  #COLOUR SETTINGS
 Set up a colour palette which allows us to theme the entire project from one location
\* ---------------------------------- */
/* ----------------------------------
    #MEDIA QUERY SETTINGS

    Sets baseline Media Queries which correlate with some of the popular viewports.
    Adjust where necessary and add/remove if needed.
    Apply mixin from tools/mq

    Usage:
    @include mq($mq-mob, min) { ... };

---------------------------------- */
/* ----------------------------------*\
    #SPACING SETTINGS
\*---------------------------------- */
/* ----------------------------------
    #TYPOGRAPHY SETTINGS
---------------------------------- */
/* ----------------------------------
    #Z-INDEX SETTINGS

    Z-index mapping: Correctly place your variable in the correct position
    based on what it should appear above and behind.
    Utilises mixin from tools/zindex

    Usage:
    $z-index: (
        "header",
        "navigation",
        "footer",
    );

    @include z-index(header);

---------------------------------- */
/* ----------------------------------
    #FONT-SIZE

    PX to REM for font-sizes and line-height
    Line height is relative to the cascade - ideally inherited from the <body> but can be overridden.

    Usage:

    @include font-size($size-alpha);
    @include font-size($size-alpha, $line-height); overrides line-height

---------------------------------- */
/* ----------------------------------
    #Z-INDEX

    Mixin to streamline the mapping of your z-index
    Takes the index of your key and applies this as your z-index value
    Is applied in settings/zindex

---------------------------------- */
.c-account .o-button {
  border: solid 1px;
}
.c-account svg {
  width: 20px;
  height: 20px;
}
.c-account__header {
  margin-bottom: 6.4rem;
}
.c-account__navheader {
  border-bottom: solid 2px #dadada;
  padding-bottom: 0.8rem;
}
.c-account__navheader h3 {
  font-size: 2.2rem;
  text-transform: uppercase;
  font-family: "Oswald", sans-serif;
  color: #000;
  letter-spacing: 0.15em;
  line-height: 1.2;
  font-weight: 600;
}
.c-account__navheader h1 {
  text-align: center;
  font-size: 2.2rem;
  text-transform: uppercase;
  font-family: "Oswald", sans-serif;
  color: #000;
  letter-spacing: 0.15em;
  line-height: 1.2;
  font-weight: 600;
}
.c-account__details {
  text-align: center;
  border-bottom: solid 2px #dadada;
  padding: 1.6rem;
}
.c-account__name {
  font-size: 1.8rem;
  color: #000;
  letter-spacing: 0.165em;
  line-height: 1.2;
  font-weight: 600;
}
.c-account__email {
  font-weight: 400;
  font-size: 1.4rem;
  line-height: 1.2;
  text-align: center;
  letter-spacing: 0.165em;
  color: #000;
}
.c-account__nav-list {
  display: block;
}
.c-account__nav-item {
  margin: 0;
  display: flex;
  justify-content: space-between;
  align-items: center;
  border-bottom: solid 2px #dadada;
  padding: 2.4rem 0 1.6rem 0;
  font-size: 1.8rem;
  text-transform: uppercase;
  font-family: "Oswald", sans-serif;
  color: #000;
  letter-spacing: 0.15em;
  line-height: 1.2;
  font-weight: 600;
}
.c-account__nav-item svg {
  width: 20px;
  height: 20px;
}
.c-account__nav-link {
  font-weight: 500;
}
.c-account__main {
  display: block;
  padding: 1.6rem 0;
}
@media screen and (min-width: 960px) {
  .c-account__main {
    display: flex;
    align-items: flex-start;
    justify-content: space-between;
  }
}
.c-account__nav {
  width: 100%;
}
@media screen and (min-width: 960px) {
  .c-account__nav {
    max-width: 244px;
  }
}
.c-account__content {
  width: 100%;
  padding: 0 6.4rem;
}
@media screen and (min-width: 960px) {
  .c-account__content {
    width: calc(100% - 244px);
  }
}
.c-account__content-title h3 {
  font-size: 2.2rem;
  text-transform: uppercase;
  font-family: "Oswald", sans-serif;
  color: #000;
  letter-spacing: 0.15em;
  line-height: 1.2;
  font-weight: 600;
  text-align: center;
}
.c-account__content .no-order {
  text-align: center;
  padding: 0.8rem;
}
.c-account__content .account-buttons {
  padding: 1.6rem;
  display: block;
}
@media screen and (min-width: 960px) {
  .c-account__content .account-buttons {
    display: flex;
    justify-content: space-between;
  }
}
.c-account__orders-item {
  margin-bottom: 3.2rem;
  background-color: #fff;
  border-radius: 4px;
  box-shadow: 0 1.1px 3.4px rgba(0, 0, 0, 0.1), 0 6px 14px rgba(0, 0, 0, 0.12);
}
.c-account__orders-header {
  display: flex;
  align-items: center;
  justify-content: space-between;
  padding: 1.6rem;
  border-bottom: 1px solid #ededed;
}
.c-account__orders-sticker {
  padding: 0.8rem;
  border: 1px solid #ddd;
  border-radius: 4px;
  font-size: 1.4rem;
}
.c-account__orders-details {
  display: flex;
  align-items: center;
  justify-content: space-between;
  padding: 1.6rem;
}
.c-account__addresses .c-form__field {
  width: 100%;
  max-width: 380px;
  margin-left: auto;
  margin-right: auto;
}
.c-account__addresses .address-content {
  padding: 1.6rem;
}
@media screen and (min-width: 960px) {
  .c-account__addresses .address-content {
    padding: 6.4rem;
  }
}
.c-account__addresses .c-form {
  padding: 2.4rem;
}
@media screen and (min-width: 960px) {
  .c-account__addresses .c-form {
    padding: 6.4rem;
  }
}
.c-account #default-address {
  font-size: 2.2rem;
  text-transform: uppercase;
  font-family: "Oswald", sans-serif;
  color: #000;
  letter-spacing: 0.15em;
  line-height: 1.2;
  font-weight: 600;
  text-align: center;
}

/*# sourceMappingURL=data:application/json;charset=utf-8;base64,*/