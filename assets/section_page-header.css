/* ---------------------------------- *\
  #COLOUR SETTINGS
 Set up a colour palette which allows us to theme the entire project from one location
\* ---------------------------------- */
/* ----------------------------------
    #MEDIA QUERY SETTINGS

    Sets baseline Media Queries which correlate with some of the popular viewports.
    Adjust where necessary and add/remove if needed.
    Apply mixin from tools/mq

    Usage:
    @include mq($mq-mob, min) { ... };

---------------------------------- */
/* ----------------------------------*\
    #SPACING SETTINGS
\*---------------------------------- */
/* ----------------------------------
    #TYPOGRAPHY SETTINGS
---------------------------------- */
/* ----------------------------------
    #Z-INDEX SETTINGS

    Z-index mapping: Correctly place your variable in the correct position
    based on what it should appear above and behind.
    Utilises mixin from tools/zindex

    Usage:
    $z-index: (
        "header",
        "navigation",
        "footer",
    );

    @include z-index(header);

---------------------------------- */
/* ----------------------------------
    #FONT-SIZE

    PX to REM for font-sizes and line-height
    Line height is relative to the cascade - ideally inherited from the <body> but can be overridden.

    Usage:

    @include font-size($size-alpha);
    @include font-size($size-alpha, $line-height); overrides line-height

---------------------------------- */
/* ----------------------------------
    #Z-INDEX

    Mixin to streamline the mapping of your z-index
    Takes the index of your key and applies this as your z-index value
    Is applied in settings/zindex

---------------------------------- */
.c-page-header {
  position: relative;
}
.c-page-header-background .o-img {
  height: 100%;
}
.c-page-header__content {
  position: absolute;
  width: 100%;
  height: 100%;
  display: flex;
  justify-content: center;
  align-items: center;
  top: 0px;
  left: 0px;
}
.c-page-header__title {
  background-color: #000;
  color: #fff;
  text-transform: uppercase;
  padding: 0.8rem;
  font-size: 3.2rem;
  font-family: "Oswald", sans-serif;
}

/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYXNzZXRzL3NlY3Rpb25fcGFnZS1oZWFkZXIuY3NzIiwibWFwcGluZ3MiOiJBQUFBOzs7dUNBQUE7QUNBQTs7Ozs7Ozs7OztvQ0FBQTtBQ0FBOztzQ0FBQTtBQ0FBOztvQ0FBQTtBQ0FBOzs7Ozs7Ozs7Ozs7Ozs7O29DQUFBO0FDRUE7Ozs7Ozs7Ozs7O29DQUFBO0FDQUE7Ozs7Ozs7b0NBQUE7QUNGQTtFQUNJO0FDMkRKO0FEeERRO0VBQ0k7QUMwRFo7QUR2REk7RUFDSTtFQUNBO0VBQ0E7RUFDQTtFQUNBO0VBQ0E7RUFDQTtFQUNBO0FDeURSO0FEdERJO0VBQ0ksc0JQWk87RU9hUCxXUFpPO0VPYVA7RUFDQSxlTG5CTTtFR1lWO0VFU0ksaUNKakJNO0FLeUVkLEMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9qdW5vLXNob3BpZnktdGVtcGxhdGUvLi9zcmMvYXNzZXRzL3Njc3MvYmFzZS9zZXR0aW5ncy9fY29sb3Vycy5zY3NzIiwid2VicGFjazovL2p1bm8tc2hvcGlmeS10ZW1wbGF0ZS8uL3NyYy9hc3NldHMvc2Nzcy9iYXNlL3NldHRpbmdzL19tcS5zY3NzIiwid2VicGFjazovL2p1bm8tc2hvcGlmeS10ZW1wbGF0ZS8uL3NyYy9hc3NldHMvc2Nzcy9iYXNlL3NldHRpbmdzL19zcGFjaW5nLnNjc3MiLCJ3ZWJwYWNrOi8vanVuby1zaG9waWZ5LXRlbXBsYXRlLy4vc3JjL2Fzc2V0cy9zY3NzL2Jhc2Uvc2V0dGluZ3MvX3R5cG9ncmFwaHkuc2NzcyIsIndlYnBhY2s6Ly9qdW5vLXNob3BpZnktdGVtcGxhdGUvLi9zcmMvYXNzZXRzL3Njc3MvYmFzZS9zZXR0aW5ncy9femluZGV4LnNjc3MiLCJ3ZWJwYWNrOi8vanVuby1zaG9waWZ5LXRlbXBsYXRlLy4vc3JjL2Fzc2V0cy9zY3NzL2Jhc2UvdG9vbHMvX2ZvbnRfc2l6ZS5zY3NzIiwid2VicGFjazovL2p1bm8tc2hvcGlmeS10ZW1wbGF0ZS8uL3NyYy9hc3NldHMvc2Nzcy9iYXNlL3Rvb2xzL196aW5kZXguc2NzcyIsIndlYnBhY2s6Ly9qdW5vLXNob3BpZnktdGVtcGxhdGUvLi9zcmMvYXNzZXRzL3Njc3MvY29tcG9uZW50cy9zZWN0aW9uX3BhZ2UtaGVhZGVyLnNjc3MiLCJ3ZWJwYWNrOi8vanVuby1zaG9waWZ5LXRlbXBsYXRlLy4vc3JjL2Fzc2V0cy9zY3NzL19zZWN0aW9ucy9zZWN0aW9uX3BhZ2UtaGVhZGVyLnNjc3MiXSwic291cmNlc0NvbnRlbnQiOlsiLyogLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLSAqXFxcclxuICAjQ09MT1VSIFNFVFRJTkdTXHJcbiBTZXQgdXAgYSBjb2xvdXIgcGFsZXR0ZSB3aGljaCBhbGxvd3MgdXMgdG8gdGhlbWUgdGhlIGVudGlyZSBwcm9qZWN0IGZyb20gb25lIGxvY2F0aW9uXHJcblxcKiAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tICovXHJcblxyXG4vLyAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxyXG4vLyAgICAgICAgICAgQnJhbmQgY29sb3Vyc1xyXG4vLyAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxyXG4kY29sb3VyLWJsYWNrOiAjMDAwO1xyXG4kY29sb3VyLXdoaXRlOiAjZmZmO1xyXG4kY29sb3VyLXJlZDogI2NmMTQyYjtcclxuXHJcbiRjb2xvdXItZ3JleS0xMDA6ICNlZGVkZWQ7XHJcbiRjb2xvdXItZ3JleS0yMDA6ICNkZGQ7XHJcbiRjb2xvdXItZ3JleS0zMDA6ICNhY2FjYWM7XHJcbiRjb2xvdXItZ3JleS00MDA6ICM2MTYxNjE7XHJcbiRjb2xvdXItZ3JleS01MDA6ICM0YjRiNGI7XHJcbiRjb2xvdXItYm9yZGVyOiAjREFEQURBO1xyXG4vLyAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxyXG4vLyAgICAgICAgICAgICBTdGF0ZXNcclxuLy8gLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cclxuJGNvbG91ci1zdWNjZXNzOiAjMDU5NDRmO1xyXG4kY29sb3VyLXdhcm5pbmc6ICNmZmMwNDM7XHJcbiRjb2xvdXItZXJyb3I6ICRjb2xvdXItcmVkO1xyXG4kY29sb3VyLWRpc2FibGVkOiAkY29sb3VyLWdyZXktMTAwO1xyXG5cclxuLy8gLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cclxuLy8gICAgICAgICAgICAgVHlwb2dyYXBoeVxyXG4vLyAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxyXG4kY29sb3VyLWhlYWRlcjogJGNvbG91ci1ibGFjaztcclxuJGNvbG91ci1ib2R5OiAkY29sb3VyLWdyZXktNTAwO1xyXG4iLCIvKiAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXHJcbiAgICAjTUVESUEgUVVFUlkgU0VUVElOR1NcclxuXHJcbiAgICBTZXRzIGJhc2VsaW5lIE1lZGlhIFF1ZXJpZXMgd2hpY2ggY29ycmVsYXRlIHdpdGggc29tZSBvZiB0aGUgcG9wdWxhciB2aWV3cG9ydHMuXHJcbiAgICBBZGp1c3Qgd2hlcmUgbmVjZXNzYXJ5IGFuZCBhZGQvcmVtb3ZlIGlmIG5lZWRlZC5cclxuICAgIEFwcGx5IG1peGluIGZyb20gdG9vbHMvbXFcclxuXHJcbiAgICBVc2FnZTpcclxuICAgIEBpbmNsdWRlIG1xKCRtcS1tb2IsIG1pbikgeyAuLi4gfTtcclxuXHJcbi0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0gKi9cclxuXHJcbiRtcS1tb2I6IDQ4MHB4O1xyXG4kbXEtbW9iLS1zbWw6IDQwMHB4O1xyXG4kbXEtbW9iLS1tZWQ6IDU2MHB4O1xyXG4kbXEtbW9iLS1scmc6IDY0MHB4O1xyXG4kbXEtdGFiOiA3NjhweDtcclxuJG1xLXRhYi0tc21sOiA3NjVweDtcclxuJG1xLXRhYi0tbHJnOiA4MjBweDtcclxuJG1xLWRlc2s6IDk2MHB4O1xyXG4kbXEtZGVzay0tc21sOiAxMDI0cHg7XHJcbiRtcS1kZXNrLS1tZWQ6IDEyODBweDtcclxuJG1xLWRlc2stLWxyZzogMTQ0MHB4O1xyXG4iLCIvKiAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tKlxcXHJcbiAgICAjU1BBQ0lORyBTRVRUSU5HU1xyXG5cXCotLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tICovXHJcblxyXG4kc3BhY2luZy14eHM6IDAuOHJlbTtcclxuJHNwYWNpbmcteHM6IDEuNnJlbTtcclxuJHNwYWNpbmctczogMi40cmVtO1xyXG4kc3BhY2luZzogMy4ycmVtO1xyXG4kc3BhY2luZy1tOiA0LjhyZW07XHJcbiRzcGFjaW5nLWw6IDUuNnJlbTtcclxuJHNwYWNpbmcteGw6IDYuNHJlbTtcclxuJHNwYWNpbmcteHhsOiA3LjJyZW07XHJcbiRzcGFjaW5nLXh4eGw6IDhyZW07XHJcbiRzcGFjaW5nLXh4eHhsOiA5LjZyZW07XHJcbiIsIi8qIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cclxuICAgICNUWVBPR1JBUEhZIFNFVFRJTkdTXHJcbi0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0gKi9cclxuXHJcbiRmb250LWhlYWRpbmc6IHZhcigtLWZvbnQtaGVhZGluZy1mYW1pbHkpO1xyXG4kZm9udC1ib2R5OiB2YXIoLS1mb250LWJvZHktZmFtaWx5KTtcclxuJGZvbnQtYm9keS1ib2xkOiB2YXIoLS1mb250LWJvZHktZmFtaWx5KTtcclxuJGZvbnQtYm9keS1pdGFsaWM6IHZhcigtLWZvbnQtYm9keS1mYW1pbHkpO1xyXG4kZm9udC1vc3dhbGQ6ICdPc3dhbGQnLCBzYW5zLXNlcmlmO1xyXG4kZm9udC1yYWxld2F5OiAnUmFsZXdheScsIHNhbnMtc2VyaWY7XHJcbiRmb250LWNvbnRlbnQ6ICdNb250c2VycmF0Jywgc2Fucy1zZXJpZjtcclxuXHJcbi8vIEJhc2UgU2l6ZXNcclxuJGJhc2UtZm9udC1zaXplOiAxNjtcclxuJGJhc2UtbGluZS1oZWlnaHQ6IDEuMjU7XHJcblxyXG4kc2l6ZS1oMTogOTA7IC8vIDkwcHggLyA5cmVtIC0gYWxwaGFcclxuJHNpemUtaDI6IDUwOyAvLyA1MHB4IC8gNXJlbSAtIGJldGFcclxuJHNpemUtaDM6IDMyOyAvLyAzMnB4IC8gMy4ycmVtIC0gZ2FtbWFcclxuJHNpemUtaDQ6IDI4OyAvLyAyOHB4IC8gMi44cmVtIC0gZGVsdGFcclxuJHNpemUtaDU6IDI0OyAvLyAyNHB4IC8gMi40cmVtIC1lcHNpbG9uXHJcbiRzaXplLWg2OiAyMjsgLy8gMjJweCAvIDIuMnJlbSAtIHpldGFcclxuJHNpemUtaDc6IDIwOyAvLyAyMHB4IC8gMi4wcmVtIC0gZXRhXHJcblxyXG4kc2l6ZS1oODogMTg7IC8vIGNlbnRpXHJcbiRzaXplLWg5OiAxNjsgLy8gbWlsbGlcclxuJHNpemUtaDEwOiAxNDsgLy8gbWljcm9cclxuJHNpemUtaDExOiAxMjsgLy8gbWljcm9cclxuJHNpemUtaDEyOiAxMDsgLy8gbWljcm9cclxuXHJcbiRzaXplLWNlbnRpOiAkc2l6ZS1oMTA7XHJcbiRzaXplLW1pY3JvOiAkc2l6ZS1oMTE7IiwiLyogLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxyXG4gICAgI1otSU5ERVggU0VUVElOR1NcclxuXHJcbiAgICBaLWluZGV4IG1hcHBpbmc6IENvcnJlY3RseSBwbGFjZSB5b3VyIHZhcmlhYmxlIGluIHRoZSBjb3JyZWN0IHBvc2l0aW9uXHJcbiAgICBiYXNlZCBvbiB3aGF0IGl0IHNob3VsZCBhcHBlYXIgYWJvdmUgYW5kIGJlaGluZC5cclxuICAgIFV0aWxpc2VzIG1peGluIGZyb20gdG9vbHMvemluZGV4XHJcblxyXG4gICAgVXNhZ2U6XHJcbiAgICAkei1pbmRleDogKFxyXG4gICAgICAgIFwiaGVhZGVyXCIsXHJcbiAgICAgICAgXCJuYXZpZ2F0aW9uXCIsXHJcbiAgICAgICAgXCJmb290ZXJcIixcclxuICAgICk7XHJcblxyXG4gICAgQGluY2x1ZGUgei1pbmRleChoZWFkZXIpO1xyXG5cclxuLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLSAqL1xyXG5cclxuJHotaW5kZXg6IChcclxuICAgIFwiYnV0dG9uXCIsXHJcbiAgICBcImhlYWRlclwiLFxyXG4gICAgXCJuYXZpZ2F0aW9uXCIsXHJcbiAgICBcInNlYXJjaFwiLFxyXG4gICAgXCJoYW1idXJnZXJcIixcclxuICAgIFwic2tpcC1saW5rXCIsXHJcbiAgICBcIm92ZXJsYXlcIixcclxuICAgIFwibW9kYWxcIixcclxuICAgIFwibG9hZGVyXCJcclxuKTtcclxuIiwiQHVzZSBcInNhc3M6bWF0aFwiO1xyXG5cclxuLyogLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxyXG4gICAgI0ZPTlQtU0laRVxyXG5cclxuICAgIFBYIHRvIFJFTSBmb3IgZm9udC1zaXplcyBhbmQgbGluZS1oZWlnaHRcclxuICAgIExpbmUgaGVpZ2h0IGlzIHJlbGF0aXZlIHRvIHRoZSBjYXNjYWRlIC0gaWRlYWxseSBpbmhlcml0ZWQgZnJvbSB0aGUgPGJvZHk+IGJ1dCBjYW4gYmUgb3ZlcnJpZGRlbi5cclxuXHJcbiAgICBVc2FnZTpcclxuXHJcbiAgICBAaW5jbHVkZSBmb250LXNpemUoJHNpemUtYWxwaGEpO1xyXG4gICAgQGluY2x1ZGUgZm9udC1zaXplKCRzaXplLWFscGhhLCAkbGluZS1oZWlnaHQpOyBvdmVycmlkZXMgbGluZS1oZWlnaHRcclxuXHJcbi0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0gKi9cclxuXHJcbkBtaXhpbiBmb250LXNpemUoJGZvbnQtc2l6ZSwgJGxpbmUtaGVpZ2h0OiBudWxsKSB7XHJcbiAgICBmb250LXNpemU6IG1hdGguZGl2KCRmb250LXNpemUsIDEwKSArIHJlbTtcclxuXHJcbiAgICBAaWYgJGxpbmUtaGVpZ2h0IHtcclxuICAgICAgICBsaW5lLWhlaWdodDogJGxpbmUtaGVpZ2h0O1xyXG4gICAgfVxyXG59XHJcbiIsIkB1c2UgXCJzYXNzOmxpc3RcIjtcclxuXHJcbi8qIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cclxuICAgICNaLUlOREVYXHJcblxyXG4gICAgTWl4aW4gdG8gc3RyZWFtbGluZSB0aGUgbWFwcGluZyBvZiB5b3VyIHotaW5kZXhcclxuICAgIFRha2VzIHRoZSBpbmRleCBvZiB5b3VyIGtleSBhbmQgYXBwbGllcyB0aGlzIGFzIHlvdXIgei1pbmRleCB2YWx1ZVxyXG4gICAgSXMgYXBwbGllZCBpbiBzZXR0aW5ncy96aW5kZXhcclxuXHJcbi0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0gKi9cclxuXHJcbkBtaXhpbiB6LWluZGV4KCRrZXkpIHtcclxuICAgICRpbmRleDogbGlzdC5pbmRleCgkei1pbmRleCwgJGtleSk7XHJcblxyXG4gICAgQGlmIHR5cGVfb2YoJGluZGV4KSAhPSBudW1iZXIge1xyXG4gICAgICAgIEBlcnJvciBcIkNhbm5vdCBmaW5kICN7JGtleX0gaW4gei1pbmRleCBtYXAuXCI7XHJcbiAgICB9XHJcbiAgICB6LWluZGV4OiAkaW5kZXg7XHJcbn1cclxuIiwiLmMtcGFnZS1oZWFkZXIge1xyXG4gICAgcG9zaXRpb246IHJlbGF0aXZlO1xyXG5cclxuICAgICYtYmFja2dyb3VuZCB7XHJcbiAgICAgICAgLm8taW1nIHtcclxuICAgICAgICAgICAgaGVpZ2h0OiAxMDAlO1xyXG4gICAgICAgIH1cclxuICAgIH1cclxuICAgICZfX2NvbnRlbnR7XHJcbiAgICAgICAgcG9zaXRpb246IGFic29sdXRlO1xyXG4gICAgICAgIHdpZHRoOiAxMDAlO1xyXG4gICAgICAgIGhlaWdodDogMTAwJTtcclxuICAgICAgICBkaXNwbGF5OiBmbGV4O1xyXG4gICAgICAgIGp1c3RpZnktY29udGVudDogY2VudGVyO1xyXG4gICAgICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XHJcbiAgICAgICAgdG9wOiAwcHg7XHJcbiAgICAgICAgbGVmdDogMHB4O1xyXG4gICAgfVxyXG5cclxuICAgICZfX3RpdGxlIHtcclxuICAgICAgICBiYWNrZ3JvdW5kLWNvbG9yOiAkY29sb3VyLWJsYWNrO1xyXG4gICAgICAgIGNvbG9yOiAkY29sb3VyLXdoaXRlO1xyXG4gICAgICAgIHRleHQtdHJhbnNmb3JtOiB1cHBlcmNhc2U7XHJcbiAgICAgICAgcGFkZGluZzogJHNwYWNpbmcteHhzO1xyXG4gICAgICAgIEBpbmNsdWRlIGZvbnQtc2l6ZSgkc2l6ZS1oMyk7XHJcbiAgICAgICAgZm9udC1mYW1pbHk6ICRmb250LW9zd2FsZDtcclxuICAgIH1cclxufSIsIi8qIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0gKlxcXG4gICNDT0xPVVIgU0VUVElOR1NcbiBTZXQgdXAgYSBjb2xvdXIgcGFsZXR0ZSB3aGljaCBhbGxvd3MgdXMgdG8gdGhlbWUgdGhlIGVudGlyZSBwcm9qZWN0IGZyb20gb25lIGxvY2F0aW9uXG5cXCogLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLSAqL1xuLyogLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxuICAgICNNRURJQSBRVUVSWSBTRVRUSU5HU1xuXG4gICAgU2V0cyBiYXNlbGluZSBNZWRpYSBRdWVyaWVzIHdoaWNoIGNvcnJlbGF0ZSB3aXRoIHNvbWUgb2YgdGhlIHBvcHVsYXIgdmlld3BvcnRzLlxuICAgIEFkanVzdCB3aGVyZSBuZWNlc3NhcnkgYW5kIGFkZC9yZW1vdmUgaWYgbmVlZGVkLlxuICAgIEFwcGx5IG1peGluIGZyb20gdG9vbHMvbXFcblxuICAgIFVzYWdlOlxuICAgIEBpbmNsdWRlIG1xKCRtcS1tb2IsIG1pbikgeyAuLi4gfTtcblxuLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLSAqL1xuLyogLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLSpcXFxuICAgICNTUEFDSU5HIFNFVFRJTkdTXG5cXCotLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tICovXG4vKiAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXG4gICAgI1RZUE9HUkFQSFkgU0VUVElOR1Ncbi0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0gKi9cbi8qIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cbiAgICAjWi1JTkRFWCBTRVRUSU5HU1xuXG4gICAgWi1pbmRleCBtYXBwaW5nOiBDb3JyZWN0bHkgcGxhY2UgeW91ciB2YXJpYWJsZSBpbiB0aGUgY29ycmVjdCBwb3NpdGlvblxuICAgIGJhc2VkIG9uIHdoYXQgaXQgc2hvdWxkIGFwcGVhciBhYm92ZSBhbmQgYmVoaW5kLlxuICAgIFV0aWxpc2VzIG1peGluIGZyb20gdG9vbHMvemluZGV4XG5cbiAgICBVc2FnZTpcbiAgICAkei1pbmRleDogKFxuICAgICAgICBcImhlYWRlclwiLFxuICAgICAgICBcIm5hdmlnYXRpb25cIixcbiAgICAgICAgXCJmb290ZXJcIixcbiAgICApO1xuXG4gICAgQGluY2x1ZGUgei1pbmRleChoZWFkZXIpO1xuXG4tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tICovXG4vKiAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXG4gICAgI0ZPTlQtU0laRVxuXG4gICAgUFggdG8gUkVNIGZvciBmb250LXNpemVzIGFuZCBsaW5lLWhlaWdodFxuICAgIExpbmUgaGVpZ2h0IGlzIHJlbGF0aXZlIHRvIHRoZSBjYXNjYWRlIC0gaWRlYWxseSBpbmhlcml0ZWQgZnJvbSB0aGUgPGJvZHk+IGJ1dCBjYW4gYmUgb3ZlcnJpZGRlbi5cblxuICAgIFVzYWdlOlxuXG4gICAgQGluY2x1ZGUgZm9udC1zaXplKCRzaXplLWFscGhhKTtcbiAgICBAaW5jbHVkZSBmb250LXNpemUoJHNpemUtYWxwaGEsICRsaW5lLWhlaWdodCk7IG92ZXJyaWRlcyBsaW5lLWhlaWdodFxuXG4tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tICovXG4vKiAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXG4gICAgI1otSU5ERVhcblxuICAgIE1peGluIHRvIHN0cmVhbWxpbmUgdGhlIG1hcHBpbmcgb2YgeW91ciB6LWluZGV4XG4gICAgVGFrZXMgdGhlIGluZGV4IG9mIHlvdXIga2V5IGFuZCBhcHBsaWVzIHRoaXMgYXMgeW91ciB6LWluZGV4IHZhbHVlXG4gICAgSXMgYXBwbGllZCBpbiBzZXR0aW5ncy96aW5kZXhcblxuLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLSAqL1xuLmMtcGFnZS1oZWFkZXIge1xuICBwb3NpdGlvbjogcmVsYXRpdmU7XG59XG4uYy1wYWdlLWhlYWRlci1iYWNrZ3JvdW5kIC5vLWltZyB7XG4gIGhlaWdodDogMTAwJTtcbn1cbi5jLXBhZ2UtaGVhZGVyX19jb250ZW50IHtcbiAgcG9zaXRpb246IGFic29sdXRlO1xuICB3aWR0aDogMTAwJTtcbiAgaGVpZ2h0OiAxMDAlO1xuICBkaXNwbGF5OiBmbGV4O1xuICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcbiAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbiAgdG9wOiAwcHg7XG4gIGxlZnQ6IDBweDtcbn1cbi5jLXBhZ2UtaGVhZGVyX190aXRsZSB7XG4gIGJhY2tncm91bmQtY29sb3I6ICMwMDA7XG4gIGNvbG9yOiAjZmZmO1xuICB0ZXh0LXRyYW5zZm9ybTogdXBwZXJjYXNlO1xuICBwYWRkaW5nOiAwLjhyZW07XG4gIGZvbnQtc2l6ZTogMy4ycmVtO1xuICBmb250LWZhbWlseTogXCJPc3dhbGRcIiwgc2Fucy1zZXJpZjtcbn0iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=*/