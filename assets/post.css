/* ---------------------------------- *\
  #COLOUR SETTINGS
 Set up a colour palette which allows us to theme the entire project from one location
\* ---------------------------------- */
/* ----------------------------------
    #MEDIA QUERY SETTINGS

    Sets baseline Media Queries which correlate with some of the popular viewports.
    Adjust where necessary and add/remove if needed.
    Apply mixin from tools/mq

    Usage:
    @include mq($mq-mob, min) { ... };

---------------------------------- */
/* ----------------------------------*\
    #SPACING SETTINGS
\*---------------------------------- */
/* ----------------------------------
    #TYPOGRAPHY SETTINGS
---------------------------------- */
/* ----------------------------------
    #Z-INDEX SETTINGS

    Z-index mapping: Correctly place your variable in the correct position
    based on what it should appear above and behind.
    Utilises mixin from tools/zindex

    Usage:
    $z-index: (
        "header",
        "navigation",
        "footer",
    );

    @include z-index(header);

---------------------------------- */
/* ----------------------------------
    #FONT-SIZE

    PX to REM for font-sizes and line-height
    Line height is relative to the cascade - ideally inherited from the <body> but can be overridden.

    Usage:

    @include font-size($size-alpha);
    @include font-size($size-alpha, $line-height); overrides line-height

---------------------------------- */
/* ----------------------------------
    #Z-INDEX

    Mixin to streamline the mapping of your z-index
    Takes the index of your key and applies this as your z-index value
    Is applied in settings/zindex

---------------------------------- */
.main-post {
  position: relative;
}
.main-post img {
  height: 100%;
}
.main-post.o-container {
  width: 100%;
}
@media screen and (min-width: 820px) {
  .main-post.o-container {
    width: min(100% - 4.8rem, 1600px);
  }
}
.main-post__container {
  display: flex;
  flex-direction: column;
  width: 100%;
  height: 100%;
  margin: 2.4rem 0 3.6rem;
  position: absolute;
  top: 0;
  left: 0;
  margin-top: 0;
}
@media screen and (min-width: 820px) {
  .main-post__container {
    position: absolute;
    top: 0;
    left: 0;
    margin-top: 0;
  }
}
.main-post__inner {
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: center;
  height: 100%;
}
.main-post__title {
  margin-bottom: 2.4rem;
  color: #000;
  font-family: "Oswald", sans-serif;
  font-size: 3.8rem;
  font-weight: 600;
  line-height: 1.4;
  text-align: center;
  text-transform: uppercase;
}
@media screen and (min-width: 820px) {
  .main-post__title {
    margin-bottom: 4.8rem;
    font-size: 5rem;
    line-height: 60px;
  }
}
.main-post__title.box {
  padding: 0px 10px;
  background-color: #000;
  color: #fff;
}
@media screen and (min-width: 820px) {
  .main-post__title.box {
    padding: 0px 50px 5px;
  }
}
.main-post__tag {
  width: 100%;
  margin-bottom: 1.8rem;
  color: #fff;
  font-family: "Montserrat", sans-serif;
  font-size: 20px;
  font-weight: 400;
  line-height: 1.5;
  letter-spacing: 0.05em;
  text-align: center;
  padding: 0px 10px;
}
@media screen and (min-width: 820px) {
  .main-post__tag {
    max-width: 950px;
    margin-bottom: 4.8rem;
    text-align: center;
  }
}
.main-post__tag label {
  border: solid 1px #fff;
  padding: 10px 20px;
}

.main-post_content {
  margin-top: 30px;
}
@media screen and (min-width: 820px) {
  .main-post_content {
    margin-top: 40px;
  }
}
.main-post_content strong {
  margin-top: 10px;
  font-family: "Oswald", sans-serif;
  font-weight: 600;
  font-size: 20px;
  line-height: 120%;
  /* or 24px */
  letter-spacing: 0.15em;
  text-transform: uppercase;
  color: #000;
}
.main-post_content .style-one .post-content {
  display: flex;
  flex-wrap: wrap;
  justify-content: center;
  align-items: center;
  margin-top: 30px;
}
@media screen and (min-width: 820px) {
  .main-post_content .style-one .post-content {
    padding: 0px;
  }
  .main-post_content .style-one .post-content.row-reserve {
    flex-direction: row-reverse;
  }
}
.main-post_content .style-one .post-content__image {
  width: 100%;
}
@media screen and (min-width: 820px) {
  .main-post_content .style-one .post-content__image {
    width: 40%;
  }
}
.main-post_content .style-one .post-content__image .o-img {
  height: 100%;
}
.main-post_content .style-one .post-content__content {
  width: 100%;
  text-align: center;
  padding: 3.2rem 1.6rem;
}
@media screen and (min-width: 820px) {
  .main-post_content .style-one .post-content__content {
    width: 60%;
    text-align: left;
    padding: 6.4rem;
  }
}
.main-post_content .style-one .post-content__content b {
  font-family: "Oswald", sans-serif;
  font-weight: 400;
  font-size: 22px;
  line-height: 120%;
  /* or 26px */
  text-align: center;
  letter-spacing: 0.15em;
  text-transform: uppercase;
  color: #000000;
}
@media screen and (min-width: 820px) {
  .main-post_content .style-one .post-content__content b {
    text-align: left;
  }
}
.main-post_content .style-two .post-content {
  display: flex;
  flex-wrap: wrap;
  justify-content: center;
  align-items: center;
  margin-top: 30px;
}
@media screen and (min-width: 820px) {
  .main-post_content .style-two .post-content {
    padding: 0px 60px;
  }
  .main-post_content .style-two .post-content.row-reserve {
    flex-direction: row-reverse;
  }
}
.main-post_content .style-two .post-content__image {
  width: 100%;
}
@media screen and (min-width: 820px) {
  .main-post_content .style-two .post-content__image {
    width: 55%;
  }
}
.main-post_content .style-two .post-content__image .o-img {
  height: 100%;
}
.main-post_content .style-two .post-content__content {
  width: 100%;
  text-align: center;
  padding: 3.2rem 1.6rem;
}
@media screen and (min-width: 820px) {
  .main-post_content .style-two .post-content__content {
    width: 45%;
    text-align: left;
    padding: 6.4rem;
  }
}
.main-post_content .style-two .post-content__content b {
  font-family: "Oswald", sans-serif;
  font-weight: 400;
  font-size: 22px;
  line-height: 120%;
  /* or 26px */
  text-align: center;
  letter-spacing: 0.15em;
  text-transform: uppercase;
  color: #000000;
}
@media screen and (min-width: 820px) {
  .main-post_content .style-two .post-content__content b {
    text-align: left;
  }
}
.main-post_content .related-product {
  margin-top: 40px;
}
.main-post_content .related-product .c-related-products-title {
  font-family: "Oswald";
  font-style: normal;
  font-weight: 400;
  font-size: 35px;
  line-height: 120%;
  text-align: center;
  letter-spacing: 0.15em;
  text-transform: uppercase;
  color: #000000;
  margin-top: 20px;
}
.main-post_content .related-product .c-related-products__inner {
  display: grid;
  grid-template-columns: repeat(2, 1fr);
  gap: 20px;
  padding-top: 40px;
  padding-bottom: 40px;
}
@media screen and (min-width: 640px) {
  .main-post_content .related-product .c-related-products__inner {
    grid-template-columns: repeat(4, 1fr);
  }
}
.main-post_content .related-product .c-related-products__inner .c-product-card {
  width: 100%;
}
.main-post_content .c-list-collection {
  display: flex;
  flex-direction: row;
  flex-wrap: wrap;
  margin-top: 4.8rem;
}
@media screen and (min-width: 820px) {
  .main-post_content .c-list-collection {
    width: calc(100% + 40px);
    margin-left: -20px;
  }
}
.main-post_content .c-list-collection__item {
  width: 100%;
  margin-bottom: 24px;
}
@media screen and (min-width: 820px) {
  .main-post_content .c-list-collection__item {
    width: 50%;
    margin-bottom: 40px;
    padding: 0 20px;
  }
  .main-post_content .c-list-collection__item:nth-child(3n) {
    width: 100%;
  }
}
.main-post_content .c-list-collection__item .o-img__frame {
  max-height: 450px;
  filter: brightness(0.9);
}
.main-post_content .c-list-collection__item .o-img__frame img {
  height: 100%;
}

/*# sourceMappingURL=data:application/json;charset=utf-8;base64,*/