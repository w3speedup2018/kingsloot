/* ---------------------------------- *\
  #COLOUR SETTINGS
 Set up a colour palette which allows us to theme the entire project from one location
\* ---------------------------------- */
/* ----------------------------------
    #MEDIA QUERY SETTINGS

    Sets baseline Media Queries which correlate with some of the popular viewports.
    Adjust where necessary and add/remove if needed.
    Apply mixin from tools/mq

    Usage:
    @include mq($mq-mob, min) { ... };

---------------------------------- */
/* ----------------------------------*\
    #SPACING SETTINGS
\*---------------------------------- */
/* ----------------------------------
    #TYPOGRAPHY SETTINGS
---------------------------------- */
/* ----------------------------------
    #Z-INDEX SETTINGS

    Z-index mapping: Correctly place your variable in the correct position
    based on what it should appear above and behind.
    Utilises mixin from tools/zindex

    Usage:
    $z-index: (
        "header",
        "navigation",
        "footer",
    );

    @include z-index(header);

---------------------------------- */
/* ----------------------------------
    #FONT-SIZE

    PX to REM for font-sizes and line-height
    Line height is relative to the cascade - ideally inherited from the <body> but can be overridden.

    Usage:

    @include font-size($size-alpha);
    @include font-size($size-alpha, $line-height); overrides line-height

---------------------------------- */
/* ----------------------------------
    #Z-INDEX

    Mixin to streamline the mapping of your z-index
    Takes the index of your key and applies this as your z-index value
    Is applied in settings/zindex

---------------------------------- */
.c-special-product {
  margin: 48px 0;
}
.c-special-product__container {
  margin: auto;
  max-width: 1200px;
  position: relative;
}
.c-special-product__content {
  position: absolute;
  top: 24px;
  color: #000000;
  text-align: center;
  width: 100%;
}
@media screen and (min-width: 768px) {
  .c-special-product__content {
    left: 48px;
    top: 48px;
    text-align: left;
  }
}
.c-special-product__title {
  padding: 15px 0;
  font-size: 32px;
  font-family: "Oswald", sans-serif;
  font-weight: 400;
  line-height: 1.25;
  text-transform: uppercase;
}
.c-special-product__subtitle {
  font-size: 16px;
  font-weight: 400;
  text-transform: uppercase;
}
.c-special-product__price {
  font-size: 24px;
  font-weight: 400;
}
.c-special-product__price .c-price {
  font-weight: 350;
}
.c-special-product__price .c-price__compare {
  color: #000000;
}
.c-special-product__category {
  font-size: 14px;
  margin-bottom: 12px;
}
.c-special-product__category p {
  padding: 24px 0;
}
.c-special-product__category ul {
  margin-left: 24px;
  list-style: disc;
  margin: auto;
  width: -webkit-fit-content;
  width: -moz-fit-content;
  width: fit-content;
}
@media screen and (min-width: 768px) {
  .c-special-product__category ul {
    width: 100%;
    margin-left: 24px;
  }
}
.c-special-product__category ul li {
  list-style: disc;
}
.c-special-product__desc {
  text-align: center;
  max-width: 800px;
  margin: 24px;
}
.c-special-product__desc h2 {
  font-size: 25px;
  margin-bottom: 24px;
  font-family: "Oswald", sans-serif;
  letter-spacing: 0px;
}
@media screen and (min-width: 768px) {
  .c-special-product__desc h2 {
    font-size: 32px;
  }
}
@media screen and (min-width: 768px) {
  .c-special-product__desc {
    padding: 75px 0;
    margin: auto;
  }
}

/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYXNzZXRzL3NwZWNpYWwtcHJvZHVjdC5jc3MiLCJtYXBwaW5ncyI6IkFBQUE7Ozt1Q0FBQTtBQ0FBOzs7Ozs7Ozs7O29DQUFBO0FDQUE7O3NDQUFBO0FDQUE7O29DQUFBO0FDQUE7Ozs7Ozs7Ozs7Ozs7Ozs7b0NBQUE7QUNFQTs7Ozs7Ozs7Ozs7b0NBQUE7QUNBQTs7Ozs7OztvQ0FBQTtBQ0ZBO0VBQ0k7QUMyREo7QUR6REk7RUFDSTtFQUNBO0VBQ0E7QUMyRFI7QUR4REk7RUFDSTtFQUNBO0VBQ0E7RUFDQTtFQUNBO0FDMERSO0FDbkVRO0VGSUo7SUFRUTtJQUNBO0lBQ0E7RUMyRFY7QUFDRjtBRHhESTtFQUNJO0VBQ0E7RUFDQSxpQ0psQk07RUltQk47RUFDQTtFQUNBO0FDMERSO0FEdkRJO0VBQ0k7RUFDQTtFQUNBO0FDeURSO0FEdERJO0VBQ0k7RUFDQTtBQ3dEUjtBRHREUTtFQUNJO0FDd0RaO0FEckRRO0VBQ0k7QUN1RFo7QURuREk7RUFDSTtFQUNBO0FDcURSO0FEbkRRO0VBQ0k7QUNxRFo7QURsRFE7RUFDSTtFQUNBO0VBQ0E7RUFDQTtFQUFBO0VBQUE7QUNvRFo7QUM5R1E7RUZzREE7SUFPUTtJQUNBO0VDcURkO0FBQ0Y7QURuRFk7RUFDSTtBQ3FEaEI7QURoREk7RUFDSTtFQUNBO0VBQ0E7QUNrRFI7QURoRFE7RUFDSTtFQUNBO0VBQ0EsaUNKNUVFO0VJNkVGO0FDa0RaO0FDbElRO0VGNEVBO0lBT1E7RUNtRGQ7QUFDRjtBQ3ZJUTtFRnVFSjtJQWlCUTtJQUNBO0VDbURWO0FBQ0YsQyIsInNvdXJjZXMiOlsid2VicGFjazovL2p1bm8tc2hvcGlmeS10ZW1wbGF0ZS8uL3NyYy9hc3NldHMvc2Nzcy9iYXNlL3NldHRpbmdzL19jb2xvdXJzLnNjc3MiLCJ3ZWJwYWNrOi8vanVuby1zaG9waWZ5LXRlbXBsYXRlLy4vc3JjL2Fzc2V0cy9zY3NzL2Jhc2Uvc2V0dGluZ3MvX21xLnNjc3MiLCJ3ZWJwYWNrOi8vanVuby1zaG9waWZ5LXRlbXBsYXRlLy4vc3JjL2Fzc2V0cy9zY3NzL2Jhc2Uvc2V0dGluZ3MvX3NwYWNpbmcuc2NzcyIsIndlYnBhY2s6Ly9qdW5vLXNob3BpZnktdGVtcGxhdGUvLi9zcmMvYXNzZXRzL3Njc3MvYmFzZS9zZXR0aW5ncy9fdHlwb2dyYXBoeS5zY3NzIiwid2VicGFjazovL2p1bm8tc2hvcGlmeS10ZW1wbGF0ZS8uL3NyYy9hc3NldHMvc2Nzcy9iYXNlL3NldHRpbmdzL196aW5kZXguc2NzcyIsIndlYnBhY2s6Ly9qdW5vLXNob3BpZnktdGVtcGxhdGUvLi9zcmMvYXNzZXRzL3Njc3MvYmFzZS90b29scy9fZm9udF9zaXplLnNjc3MiLCJ3ZWJwYWNrOi8vanVuby1zaG9waWZ5LXRlbXBsYXRlLy4vc3JjL2Fzc2V0cy9zY3NzL2Jhc2UvdG9vbHMvX3ppbmRleC5zY3NzIiwid2VicGFjazovL2p1bm8tc2hvcGlmeS10ZW1wbGF0ZS8uL3NyYy9hc3NldHMvc2Nzcy9jb21wb25lbnRzL19zcGVjaWFsLXByb2R1Y3Quc2NzcyIsIndlYnBhY2s6Ly9qdW5vLXNob3BpZnktdGVtcGxhdGUvLi9zcmMvYXNzZXRzL3Njc3MvX3NlY3Rpb25zL3NwZWNpYWwtcHJvZHVjdC5zY3NzIiwid2VicGFjazovL2p1bm8tc2hvcGlmeS10ZW1wbGF0ZS8uL3NyYy9hc3NldHMvc2Nzcy9iYXNlL3Rvb2xzL19tcS5zY3NzIl0sInNvdXJjZXNDb250ZW50IjpbIi8qIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0gKlxcXHJcbiAgI0NPTE9VUiBTRVRUSU5HU1xyXG4gU2V0IHVwIGEgY29sb3VyIHBhbGV0dGUgd2hpY2ggYWxsb3dzIHVzIHRvIHRoZW1lIHRoZSBlbnRpcmUgcHJvamVjdCBmcm9tIG9uZSBsb2NhdGlvblxyXG5cXCogLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLSAqL1xyXG5cclxuLy8gLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cclxuLy8gICAgICAgICAgIEJyYW5kIGNvbG91cnNcclxuLy8gLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cclxuJGNvbG91ci1ibGFjazogIzAwMDtcclxuJGNvbG91ci13aGl0ZTogI2ZmZjtcclxuJGNvbG91ci1yZWQ6ICNjZjE0MmI7XHJcblxyXG4kY29sb3VyLWdyZXktMTAwOiAjZWRlZGVkO1xyXG4kY29sb3VyLWdyZXktMjAwOiAjZGRkO1xyXG4kY29sb3VyLWdyZXktMzAwOiAjYWNhY2FjO1xyXG4kY29sb3VyLWdyZXktNDAwOiAjNjE2MTYxO1xyXG4kY29sb3VyLWdyZXktNTAwOiAjNGI0YjRiO1xyXG4kY29sb3VyLWJvcmRlcjogI0RBREFEQTtcclxuLy8gLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cclxuLy8gICAgICAgICAgICAgU3RhdGVzXHJcbi8vIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXHJcbiRjb2xvdXItc3VjY2VzczogIzA1OTQ0ZjtcclxuJGNvbG91ci13YXJuaW5nOiAjZmZjMDQzO1xyXG4kY29sb3VyLWVycm9yOiAkY29sb3VyLXJlZDtcclxuJGNvbG91ci1kaXNhYmxlZDogJGNvbG91ci1ncmV5LTEwMDtcclxuXHJcbi8vIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXHJcbi8vICAgICAgICAgICAgIFR5cG9ncmFwaHlcclxuLy8gLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cclxuJGNvbG91ci1oZWFkZXI6ICRjb2xvdXItYmxhY2s7XHJcbiRjb2xvdXItYm9keTogJGNvbG91ci1ncmV5LTUwMDtcclxuIiwiLyogLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxyXG4gICAgI01FRElBIFFVRVJZIFNFVFRJTkdTXHJcblxyXG4gICAgU2V0cyBiYXNlbGluZSBNZWRpYSBRdWVyaWVzIHdoaWNoIGNvcnJlbGF0ZSB3aXRoIHNvbWUgb2YgdGhlIHBvcHVsYXIgdmlld3BvcnRzLlxyXG4gICAgQWRqdXN0IHdoZXJlIG5lY2Vzc2FyeSBhbmQgYWRkL3JlbW92ZSBpZiBuZWVkZWQuXHJcbiAgICBBcHBseSBtaXhpbiBmcm9tIHRvb2xzL21xXHJcblxyXG4gICAgVXNhZ2U6XHJcbiAgICBAaW5jbHVkZSBtcSgkbXEtbW9iLCBtaW4pIHsgLi4uIH07XHJcblxyXG4tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tICovXHJcblxyXG4kbXEtbW9iOiA0ODBweDtcclxuJG1xLW1vYi0tc21sOiA0MDBweDtcclxuJG1xLW1vYi0tbWVkOiA1NjBweDtcclxuJG1xLW1vYi0tbHJnOiA2NDBweDtcclxuJG1xLXRhYjogNzY4cHg7XHJcbiRtcS10YWItLXNtbDogNzY1cHg7XHJcbiRtcS10YWItLWxyZzogODIwcHg7XHJcbiRtcS1kZXNrOiA5NjBweDtcclxuJG1xLWRlc2stLXNtbDogMTAyNHB4O1xyXG4kbXEtZGVzay0tbWVkOiAxMjgwcHg7XHJcbiRtcS1kZXNrLS1scmc6IDE0NDBweDtcclxuIiwiLyogLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLSpcXFxyXG4gICAgI1NQQUNJTkcgU0VUVElOR1NcclxuXFwqLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLSAqL1xyXG5cclxuJHNwYWNpbmcteHhzOiAwLjhyZW07XHJcbiRzcGFjaW5nLXhzOiAxLjZyZW07XHJcbiRzcGFjaW5nLXM6IDIuNHJlbTtcclxuJHNwYWNpbmc6IDMuMnJlbTtcclxuJHNwYWNpbmctbTogNC44cmVtO1xyXG4kc3BhY2luZy1sOiA1LjZyZW07XHJcbiRzcGFjaW5nLXhsOiA2LjRyZW07XHJcbiRzcGFjaW5nLXh4bDogNy4ycmVtO1xyXG4kc3BhY2luZy14eHhsOiA4cmVtO1xyXG4kc3BhY2luZy14eHh4bDogOS42cmVtO1xyXG4iLCIvKiAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXHJcbiAgICAjVFlQT0dSQVBIWSBTRVRUSU5HU1xyXG4tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tICovXHJcblxyXG4kZm9udC1oZWFkaW5nOiB2YXIoLS1mb250LWhlYWRpbmctZmFtaWx5KTtcclxuJGZvbnQtYm9keTogdmFyKC0tZm9udC1ib2R5LWZhbWlseSk7XHJcbiRmb250LWJvZHktYm9sZDogdmFyKC0tZm9udC1ib2R5LWZhbWlseSk7XHJcbiRmb250LWJvZHktaXRhbGljOiB2YXIoLS1mb250LWJvZHktZmFtaWx5KTtcclxuJGZvbnQtb3N3YWxkOiAnT3N3YWxkJywgc2Fucy1zZXJpZjtcclxuJGZvbnQtcmFsZXdheTogJ1JhbGV3YXknLCBzYW5zLXNlcmlmO1xyXG4kZm9udC1jb250ZW50OiAnTW9udHNlcnJhdCcsIHNhbnMtc2VyaWY7XHJcblxyXG4vLyBCYXNlIFNpemVzXHJcbiRiYXNlLWZvbnQtc2l6ZTogMTY7XHJcbiRiYXNlLWxpbmUtaGVpZ2h0OiAxLjI1O1xyXG5cclxuJHNpemUtaDE6IDkwOyAvLyA5MHB4IC8gOXJlbSAtIGFscGhhXHJcbiRzaXplLWgyOiA1MDsgLy8gNTBweCAvIDVyZW0gLSBiZXRhXHJcbiRzaXplLWgzOiAzMjsgLy8gMzJweCAvIDMuMnJlbSAtIGdhbW1hXHJcbiRzaXplLWg0OiAyODsgLy8gMjhweCAvIDIuOHJlbSAtIGRlbHRhXHJcbiRzaXplLWg1OiAyNDsgLy8gMjRweCAvIDIuNHJlbSAtZXBzaWxvblxyXG4kc2l6ZS1oNjogMjI7IC8vIDIycHggLyAyLjJyZW0gLSB6ZXRhXHJcbiRzaXplLWg3OiAyMDsgLy8gMjBweCAvIDIuMHJlbSAtIGV0YVxyXG5cclxuJHNpemUtaDg6IDE4OyAvLyBjZW50aVxyXG4kc2l6ZS1oOTogMTY7IC8vIG1pbGxpXHJcbiRzaXplLWgxMDogMTQ7IC8vIG1pY3JvXHJcbiRzaXplLWgxMTogMTI7IC8vIG1pY3JvXHJcbiRzaXplLWgxMjogMTA7IC8vIG1pY3JvXHJcblxyXG4kc2l6ZS1jZW50aTogJHNpemUtaDEwO1xyXG4kc2l6ZS1taWNybzogJHNpemUtaDExOyIsIi8qIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cclxuICAgICNaLUlOREVYIFNFVFRJTkdTXHJcblxyXG4gICAgWi1pbmRleCBtYXBwaW5nOiBDb3JyZWN0bHkgcGxhY2UgeW91ciB2YXJpYWJsZSBpbiB0aGUgY29ycmVjdCBwb3NpdGlvblxyXG4gICAgYmFzZWQgb24gd2hhdCBpdCBzaG91bGQgYXBwZWFyIGFib3ZlIGFuZCBiZWhpbmQuXHJcbiAgICBVdGlsaXNlcyBtaXhpbiBmcm9tIHRvb2xzL3ppbmRleFxyXG5cclxuICAgIFVzYWdlOlxyXG4gICAgJHotaW5kZXg6IChcclxuICAgICAgICBcImhlYWRlclwiLFxyXG4gICAgICAgIFwibmF2aWdhdGlvblwiLFxyXG4gICAgICAgIFwiZm9vdGVyXCIsXHJcbiAgICApO1xyXG5cclxuICAgIEBpbmNsdWRlIHotaW5kZXgoaGVhZGVyKTtcclxuXHJcbi0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0gKi9cclxuXHJcbiR6LWluZGV4OiAoXHJcbiAgICBcImJ1dHRvblwiLFxyXG4gICAgXCJoZWFkZXJcIixcclxuICAgIFwibmF2aWdhdGlvblwiLFxyXG4gICAgXCJzZWFyY2hcIixcclxuICAgIFwiaGFtYnVyZ2VyXCIsXHJcbiAgICBcInNraXAtbGlua1wiLFxyXG4gICAgXCJvdmVybGF5XCIsXHJcbiAgICBcIm1vZGFsXCIsXHJcbiAgICBcImxvYWRlclwiXHJcbik7XHJcbiIsIkB1c2UgXCJzYXNzOm1hdGhcIjtcclxuXHJcbi8qIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cclxuICAgICNGT05ULVNJWkVcclxuXHJcbiAgICBQWCB0byBSRU0gZm9yIGZvbnQtc2l6ZXMgYW5kIGxpbmUtaGVpZ2h0XHJcbiAgICBMaW5lIGhlaWdodCBpcyByZWxhdGl2ZSB0byB0aGUgY2FzY2FkZSAtIGlkZWFsbHkgaW5oZXJpdGVkIGZyb20gdGhlIDxib2R5PiBidXQgY2FuIGJlIG92ZXJyaWRkZW4uXHJcblxyXG4gICAgVXNhZ2U6XHJcblxyXG4gICAgQGluY2x1ZGUgZm9udC1zaXplKCRzaXplLWFscGhhKTtcclxuICAgIEBpbmNsdWRlIGZvbnQtc2l6ZSgkc2l6ZS1hbHBoYSwgJGxpbmUtaGVpZ2h0KTsgb3ZlcnJpZGVzIGxpbmUtaGVpZ2h0XHJcblxyXG4tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tICovXHJcblxyXG5AbWl4aW4gZm9udC1zaXplKCRmb250LXNpemUsICRsaW5lLWhlaWdodDogbnVsbCkge1xyXG4gICAgZm9udC1zaXplOiBtYXRoLmRpdigkZm9udC1zaXplLCAxMCkgKyByZW07XHJcblxyXG4gICAgQGlmICRsaW5lLWhlaWdodCB7XHJcbiAgICAgICAgbGluZS1oZWlnaHQ6ICRsaW5lLWhlaWdodDtcclxuICAgIH1cclxufVxyXG4iLCJAdXNlIFwic2FzczpsaXN0XCI7XHJcblxyXG4vKiAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXHJcbiAgICAjWi1JTkRFWFxyXG5cclxuICAgIE1peGluIHRvIHN0cmVhbWxpbmUgdGhlIG1hcHBpbmcgb2YgeW91ciB6LWluZGV4XHJcbiAgICBUYWtlcyB0aGUgaW5kZXggb2YgeW91ciBrZXkgYW5kIGFwcGxpZXMgdGhpcyBhcyB5b3VyIHotaW5kZXggdmFsdWVcclxuICAgIElzIGFwcGxpZWQgaW4gc2V0dGluZ3MvemluZGV4XHJcblxyXG4tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tICovXHJcblxyXG5AbWl4aW4gei1pbmRleCgka2V5KSB7XHJcbiAgICAkaW5kZXg6IGxpc3QuaW5kZXgoJHotaW5kZXgsICRrZXkpO1xyXG5cclxuICAgIEBpZiB0eXBlX29mKCRpbmRleCkgIT0gbnVtYmVyIHtcclxuICAgICAgICBAZXJyb3IgXCJDYW5ub3QgZmluZCAjeyRrZXl9IGluIHotaW5kZXggbWFwLlwiO1xyXG4gICAgfVxyXG4gICAgei1pbmRleDogJGluZGV4O1xyXG59XHJcbiIsIi5jLXNwZWNpYWwtcHJvZHVjdCB7XHJcbiAgICBtYXJnaW46IDQ4cHggMDtcclxuXHJcbiAgICAmX19jb250YWluZXIge1xyXG4gICAgICAgIG1hcmdpbjogYXV0bztcclxuICAgICAgICBtYXgtd2lkdGg6IDEyMDBweDtcclxuICAgICAgICBwb3NpdGlvbjogcmVsYXRpdmU7XHJcbiAgICB9XHJcblxyXG4gICAgJl9fY29udGVudCB7XHJcbiAgICAgICAgcG9zaXRpb246IGFic29sdXRlO1xyXG4gICAgICAgIHRvcDogMjRweDtcclxuICAgICAgICBjb2xvcjogIzAwMDAwMDtcclxuICAgICAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XHJcbiAgICAgICAgd2lkdGg6IDEwMCU7XHJcblxyXG4gICAgICAgIEBpbmNsdWRlIG1xKCRtcS10YWIpIHtcclxuICAgICAgICAgICAgbGVmdDogNDhweDtcclxuICAgICAgICAgICAgdG9wOiA0OHB4O1xyXG4gICAgICAgICAgICB0ZXh0LWFsaWduOiBsZWZ0O1xyXG4gICAgICAgIH1cclxuICAgIH1cclxuXHJcbiAgICAmX190aXRsZSB7XHJcbiAgICAgICAgcGFkZGluZzogMTVweCAwO1xyXG4gICAgICAgIGZvbnQtc2l6ZTogMzJweDtcclxuICAgICAgICBmb250LWZhbWlseTogJGZvbnQtb3N3YWxkO1xyXG4gICAgICAgIGZvbnQtd2VpZ2h0OiA0MDA7XHJcbiAgICAgICAgbGluZS1oZWlnaHQ6IDEuMjU7XHJcbiAgICAgICAgdGV4dC10cmFuc2Zvcm06IHVwcGVyY2FzZTtcclxuICAgIH1cclxuXHJcbiAgICAmX19zdWJ0aXRsZSB7XHJcbiAgICAgICAgZm9udC1zaXplOiAxNnB4O1xyXG4gICAgICAgIGZvbnQtd2VpZ2h0OiA0MDA7XHJcbiAgICAgICAgdGV4dC10cmFuc2Zvcm06IHVwcGVyY2FzZTtcclxuICAgIH1cclxuXHJcbiAgICAmX19wcmljZSB7XHJcbiAgICAgICAgZm9udC1zaXplOiAyNHB4O1xyXG4gICAgICAgIGZvbnQtd2VpZ2h0OiA0MDA7XHJcblxyXG4gICAgICAgIC5jLXByaWNlIHtcclxuICAgICAgICAgICAgZm9udC13ZWlnaHQ6IDM1MDtcclxuICAgICAgICB9XHJcblxyXG4gICAgICAgIC5jLXByaWNlX19jb21wYXJlIHtcclxuICAgICAgICAgICAgY29sb3I6ICMwMDAwMDA7XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG5cclxuICAgICZfX2NhdGVnb3J5IHtcclxuICAgICAgICBmb250LXNpemU6IDE0cHg7XHJcbiAgICAgICAgbWFyZ2luLWJvdHRvbTogMTJweDtcclxuXHJcbiAgICAgICAgcCB7XHJcbiAgICAgICAgICAgIHBhZGRpbmc6IDI0cHggMDtcclxuICAgICAgICB9XHJcblxyXG4gICAgICAgIHVsIHtcclxuICAgICAgICAgICAgbWFyZ2luLWxlZnQ6IDI0cHg7XHJcbiAgICAgICAgICAgIGxpc3Qtc3R5bGU6IGRpc2M7XHJcbiAgICAgICAgICAgIG1hcmdpbjogYXV0bztcclxuICAgICAgICAgICAgd2lkdGg6IGZpdC1jb250ZW50O1xyXG5cclxuICAgICAgICAgICAgQGluY2x1ZGUgbXEoJG1xLXRhYikge1xyXG4gICAgICAgICAgICAgICAgd2lkdGg6IDEwMCU7XHJcbiAgICAgICAgICAgICAgICBtYXJnaW4tbGVmdDogMjRweDtcclxuICAgICAgICAgICAgfVxyXG5cclxuICAgICAgICAgICAgbGkge1xyXG4gICAgICAgICAgICAgICAgbGlzdC1zdHlsZTogZGlzYztcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH1cclxuICAgIH1cclxuXHJcbiAgICAmX19kZXNjIHtcclxuICAgICAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XHJcbiAgICAgICAgbWF4LXdpZHRoOiA4MDBweDtcclxuICAgICAgICBtYXJnaW46IDI0cHg7XHJcblxyXG4gICAgICAgIGgyIHtcclxuICAgICAgICAgICAgZm9udC1zaXplOiAyNXB4O1xyXG4gICAgICAgICAgICBtYXJnaW4tYm90dG9tOiAyNHB4O1xyXG4gICAgICAgICAgICBmb250LWZhbWlseTogJGZvbnQtb3N3YWxkO1xyXG4gICAgICAgICAgICBsZXR0ZXItc3BhY2luZzogMHB4O1xyXG5cclxuICAgICAgICAgICAgQGluY2x1ZGUgbXEoJG1xLXRhYikge1xyXG4gICAgICAgICAgICAgICAgZm9udC1zaXplOiAzMnB4O1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfVxyXG5cclxuICAgICAgICBAaW5jbHVkZSBtcSgkbXEtdGFiKSB7XHJcbiAgICAgICAgICAgIHBhZGRpbmc6IDc1cHggMDtcclxuICAgICAgICAgICAgbWFyZ2luOiBhdXRvO1xyXG4gICAgICAgIH1cclxuICAgIH1cclxufSIsIi8qIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0gKlxcXG4gICNDT0xPVVIgU0VUVElOR1NcbiBTZXQgdXAgYSBjb2xvdXIgcGFsZXR0ZSB3aGljaCBhbGxvd3MgdXMgdG8gdGhlbWUgdGhlIGVudGlyZSBwcm9qZWN0IGZyb20gb25lIGxvY2F0aW9uXG5cXCogLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLSAqL1xuLyogLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxuICAgICNNRURJQSBRVUVSWSBTRVRUSU5HU1xuXG4gICAgU2V0cyBiYXNlbGluZSBNZWRpYSBRdWVyaWVzIHdoaWNoIGNvcnJlbGF0ZSB3aXRoIHNvbWUgb2YgdGhlIHBvcHVsYXIgdmlld3BvcnRzLlxuICAgIEFkanVzdCB3aGVyZSBuZWNlc3NhcnkgYW5kIGFkZC9yZW1vdmUgaWYgbmVlZGVkLlxuICAgIEFwcGx5IG1peGluIGZyb20gdG9vbHMvbXFcblxuICAgIFVzYWdlOlxuICAgIEBpbmNsdWRlIG1xKCRtcS1tb2IsIG1pbikgeyAuLi4gfTtcblxuLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLSAqL1xuLyogLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLSpcXFxuICAgICNTUEFDSU5HIFNFVFRJTkdTXG5cXCotLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tICovXG4vKiAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXG4gICAgI1RZUE9HUkFQSFkgU0VUVElOR1Ncbi0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0gKi9cbi8qIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cbiAgICAjWi1JTkRFWCBTRVRUSU5HU1xuXG4gICAgWi1pbmRleCBtYXBwaW5nOiBDb3JyZWN0bHkgcGxhY2UgeW91ciB2YXJpYWJsZSBpbiB0aGUgY29ycmVjdCBwb3NpdGlvblxuICAgIGJhc2VkIG9uIHdoYXQgaXQgc2hvdWxkIGFwcGVhciBhYm92ZSBhbmQgYmVoaW5kLlxuICAgIFV0aWxpc2VzIG1peGluIGZyb20gdG9vbHMvemluZGV4XG5cbiAgICBVc2FnZTpcbiAgICAkei1pbmRleDogKFxuICAgICAgICBcImhlYWRlclwiLFxuICAgICAgICBcIm5hdmlnYXRpb25cIixcbiAgICAgICAgXCJmb290ZXJcIixcbiAgICApO1xuXG4gICAgQGluY2x1ZGUgei1pbmRleChoZWFkZXIpO1xuXG4tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tICovXG4vKiAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXG4gICAgI0ZPTlQtU0laRVxuXG4gICAgUFggdG8gUkVNIGZvciBmb250LXNpemVzIGFuZCBsaW5lLWhlaWdodFxuICAgIExpbmUgaGVpZ2h0IGlzIHJlbGF0aXZlIHRvIHRoZSBjYXNjYWRlIC0gaWRlYWxseSBpbmhlcml0ZWQgZnJvbSB0aGUgPGJvZHk+IGJ1dCBjYW4gYmUgb3ZlcnJpZGRlbi5cblxuICAgIFVzYWdlOlxuXG4gICAgQGluY2x1ZGUgZm9udC1zaXplKCRzaXplLWFscGhhKTtcbiAgICBAaW5jbHVkZSBmb250LXNpemUoJHNpemUtYWxwaGEsICRsaW5lLWhlaWdodCk7IG92ZXJyaWRlcyBsaW5lLWhlaWdodFxuXG4tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tICovXG4vKiAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXG4gICAgI1otSU5ERVhcblxuICAgIE1peGluIHRvIHN0cmVhbWxpbmUgdGhlIG1hcHBpbmcgb2YgeW91ciB6LWluZGV4XG4gICAgVGFrZXMgdGhlIGluZGV4IG9mIHlvdXIga2V5IGFuZCBhcHBsaWVzIHRoaXMgYXMgeW91ciB6LWluZGV4IHZhbHVlXG4gICAgSXMgYXBwbGllZCBpbiBzZXR0aW5ncy96aW5kZXhcblxuLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLSAqL1xuLmMtc3BlY2lhbC1wcm9kdWN0IHtcbiAgbWFyZ2luOiA0OHB4IDA7XG59XG4uYy1zcGVjaWFsLXByb2R1Y3RfX2NvbnRhaW5lciB7XG4gIG1hcmdpbjogYXV0bztcbiAgbWF4LXdpZHRoOiAxMjAwcHg7XG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcbn1cbi5jLXNwZWNpYWwtcHJvZHVjdF9fY29udGVudCB7XG4gIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgdG9wOiAyNHB4O1xuICBjb2xvcjogIzAwMDAwMDtcbiAgdGV4dC1hbGlnbjogY2VudGVyO1xuICB3aWR0aDogMTAwJTtcbn1cbkBtZWRpYSBzY3JlZW4gYW5kIChtaW4td2lkdGg6IDc2OHB4KSB7XG4gIC5jLXNwZWNpYWwtcHJvZHVjdF9fY29udGVudCB7XG4gICAgbGVmdDogNDhweDtcbiAgICB0b3A6IDQ4cHg7XG4gICAgdGV4dC1hbGlnbjogbGVmdDtcbiAgfVxufVxuLmMtc3BlY2lhbC1wcm9kdWN0X190aXRsZSB7XG4gIHBhZGRpbmc6IDE1cHggMDtcbiAgZm9udC1zaXplOiAzMnB4O1xuICBmb250LWZhbWlseTogXCJPc3dhbGRcIiwgc2Fucy1zZXJpZjtcbiAgZm9udC13ZWlnaHQ6IDQwMDtcbiAgbGluZS1oZWlnaHQ6IDEuMjU7XG4gIHRleHQtdHJhbnNmb3JtOiB1cHBlcmNhc2U7XG59XG4uYy1zcGVjaWFsLXByb2R1Y3RfX3N1YnRpdGxlIHtcbiAgZm9udC1zaXplOiAxNnB4O1xuICBmb250LXdlaWdodDogNDAwO1xuICB0ZXh0LXRyYW5zZm9ybTogdXBwZXJjYXNlO1xufVxuLmMtc3BlY2lhbC1wcm9kdWN0X19wcmljZSB7XG4gIGZvbnQtc2l6ZTogMjRweDtcbiAgZm9udC13ZWlnaHQ6IDQwMDtcbn1cbi5jLXNwZWNpYWwtcHJvZHVjdF9fcHJpY2UgLmMtcHJpY2Uge1xuICBmb250LXdlaWdodDogMzUwO1xufVxuLmMtc3BlY2lhbC1wcm9kdWN0X19wcmljZSAuYy1wcmljZV9fY29tcGFyZSB7XG4gIGNvbG9yOiAjMDAwMDAwO1xufVxuLmMtc3BlY2lhbC1wcm9kdWN0X19jYXRlZ29yeSB7XG4gIGZvbnQtc2l6ZTogMTRweDtcbiAgbWFyZ2luLWJvdHRvbTogMTJweDtcbn1cbi5jLXNwZWNpYWwtcHJvZHVjdF9fY2F0ZWdvcnkgcCB7XG4gIHBhZGRpbmc6IDI0cHggMDtcbn1cbi5jLXNwZWNpYWwtcHJvZHVjdF9fY2F0ZWdvcnkgdWwge1xuICBtYXJnaW4tbGVmdDogMjRweDtcbiAgbGlzdC1zdHlsZTogZGlzYztcbiAgbWFyZ2luOiBhdXRvO1xuICB3aWR0aDogZml0LWNvbnRlbnQ7XG59XG5AbWVkaWEgc2NyZWVuIGFuZCAobWluLXdpZHRoOiA3NjhweCkge1xuICAuYy1zcGVjaWFsLXByb2R1Y3RfX2NhdGVnb3J5IHVsIHtcbiAgICB3aWR0aDogMTAwJTtcbiAgICBtYXJnaW4tbGVmdDogMjRweDtcbiAgfVxufVxuLmMtc3BlY2lhbC1wcm9kdWN0X19jYXRlZ29yeSB1bCBsaSB7XG4gIGxpc3Qtc3R5bGU6IGRpc2M7XG59XG4uYy1zcGVjaWFsLXByb2R1Y3RfX2Rlc2Mge1xuICB0ZXh0LWFsaWduOiBjZW50ZXI7XG4gIG1heC13aWR0aDogODAwcHg7XG4gIG1hcmdpbjogMjRweDtcbn1cbi5jLXNwZWNpYWwtcHJvZHVjdF9fZGVzYyBoMiB7XG4gIGZvbnQtc2l6ZTogMjVweDtcbiAgbWFyZ2luLWJvdHRvbTogMjRweDtcbiAgZm9udC1mYW1pbHk6IFwiT3N3YWxkXCIsIHNhbnMtc2VyaWY7XG4gIGxldHRlci1zcGFjaW5nOiAwcHg7XG59XG5AbWVkaWEgc2NyZWVuIGFuZCAobWluLXdpZHRoOiA3NjhweCkge1xuICAuYy1zcGVjaWFsLXByb2R1Y3RfX2Rlc2MgaDIge1xuICAgIGZvbnQtc2l6ZTogMzJweDtcbiAgfVxufVxuQG1lZGlhIHNjcmVlbiBhbmQgKG1pbi13aWR0aDogNzY4cHgpIHtcbiAgLmMtc3BlY2lhbC1wcm9kdWN0X19kZXNjIHtcbiAgICBwYWRkaW5nOiA3NXB4IDA7XG4gICAgbWFyZ2luOiBhdXRvO1xuICB9XG59IiwiQG1peGluIG1xKCR2aWV3cG9ydHMsICRjb25zdHJhaW50MTogbWluLCAkY29uc3RyYWludDI6IHdpZHRoKSB7XHJcbiAgICAkbWluOiBtaW4tI3skY29uc3RyYWludDJ9O1xyXG4gICAgJG1heDogbWF4LSN7JGNvbnN0cmFpbnQyfTtcclxuXHJcbiAgICBAaWYgdHlwZS1vZigkdmlld3BvcnRzKSA9PSBudW1iZXIge1xyXG4gICAgICAgIEBtZWRpYSBzY3JlZW4gYW5kICgjeyRjb25zdHJhaW50MX0tI3skY29uc3RyYWludDJ9OiAkdmlld3BvcnRzKSB7XHJcbiAgICAgICAgICAgIEBjb250ZW50O1xyXG4gICAgICAgIH1cclxuICAgIH0gQGVsc2Uge1xyXG4gICAgICAgIEBtZWRpYSBzY3JlZW4gYW5kICgkbWluOiBudGgoJHZpZXdwb3J0cywgMSkpIGFuZCAoJG1heDogbnRoKCR2aWV3cG9ydHMsIDIpKSB7XHJcbiAgICAgICAgICAgIEBjb250ZW50O1xyXG4gICAgICAgIH1cclxuICAgIH1cclxufVxyXG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=*/